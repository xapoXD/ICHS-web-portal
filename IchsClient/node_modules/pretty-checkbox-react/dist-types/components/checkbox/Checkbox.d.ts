import * as React from 'react';
import { useCheckboxState, UseCheckboxState } from './useCheckboxState';
import { PCRCheckboxRadioProps } from '../../typings/PCRCheckboxRadioProps';
export declare type CheckboxProps = PCRCheckboxRadioProps<UseCheckboxState['state']> & {
    /**
     * Mark the underlying HTML input checkbox as `indeterminate`. This prop doesn't change
     * icons for you, it just ensures we have the correct `aria-checked` value
     * and the checkbox has indeterminate status.
     */
    indeterminate?: boolean;
};
export declare const Checkbox: React.ForwardRefExoticComponent<Omit<import("../../typings/PCRCommonProps").CommonProps<string | boolean | any[] | undefined>, "type"> & {
    shape?: ("round" | "curve") | undefined;
    variant?: ("thick" | "fill") | undefined;
    animation?: ("smooth" | "rotate" | "jelly" | "tada" | "pulse") | undefined;
    plain?: boolean | undefined;
    indeterminate?: boolean | undefined;
    icon?: React.ReactElement<any, "em" | "i" | "img" | "svg"> | undefined;
    iconType?: "image" | "svg" | "icon" | undefined;
} & {
    /**
     * Mark the underlying HTML input checkbox as `indeterminate`. This prop doesn't change
     * icons for you, it just ensures we have the correct `aria-checked` value
     * and the checkbox has indeterminate status.
     */
    indeterminate?: boolean | undefined;
} & React.RefAttributes<HTMLInputElement>>;
export { useCheckboxState, UseCheckboxState };
//# sourceMappingURL=Checkbox.d.ts.map