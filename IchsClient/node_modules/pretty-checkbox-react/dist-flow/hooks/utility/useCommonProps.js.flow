import { CommonProps } from "../../typings/PCRCommonProps";

/**
 * Filters out the noise of prop mayhem with PCR. This separates
 * all props from the native HTML props that will eventually get passed
 * to the input element. Generated PCR UUIDs are created here, unless
 * user has specified one of their own.
 */
declare export var useCommonProps: <S>(props: CommonProps<S>) => {
  locked: boolean | void,
  color:
    | $PropertyType<$Exports<"../../typings/PCRCommonProps">, "Colors">
    | ("primary-o" | "success-o" | "info-o" | "warning-o" | "danger-o")
    | void,
  variant: string | void,
  animation: string | void,
  children: $PropertyType<$Exports<"react">, "ReactNode">,
  id: string,
  className: string | void,
  bigger: boolean | void,
  style: $PropertyType<$Exports<"react">, "CSSProperties"> | void,
  hasFocus: boolean | void,
  htmlProps: {
    max?: string | number | void,
    required?: boolean | void,
    hidden?: boolean | void,
    dir?: string | void,
    form?: string | void,
    slot?: string | void,
    title?: string | void,
    pattern?: string | void,
    disabled?: boolean | void,
    size?: number | void,
    multiple?: boolean | void,
    height?: string | number | void,
    translate?: "yes" | "no" | void,
    width?: string | number | void,
    prefix?: string | void,
    src?: string | void,
    list?: string | void,
    step?: string | number | void,
    onChange?: $PropertyType<$Exports<"react">, "ChangeEventHandler"> | void,
    value?: string | number | $ReadOnlyArray<string> | void,
    accept?: string | void,
    alt?: string | void,
    autoComplete?: string | void,
    autoFocus?: boolean | void,
    capture?: string | boolean | void,
    checked?: boolean | void,
    crossOrigin?: string | void,
    enterKeyHint?:
      | "search"
      | "enter"
      | "next"
      | "done"
      | "go"
      | "previous"
      | "send"
      | void,
    formAction?: string | void,
    formEncType?: string | void,
    formMethod?: string | void,
    formNoValidate?: boolean | void,
    formTarget?: string | void,
    maxLength?: number | void,
    min?: string | number | void,
    minLength?: number | void,
    name?: string | void,
    placeholder?: string | void,
    readOnly?: boolean | void,
    type?: string | void,
    defaultChecked?: boolean | void,
    defaultValue?: string | number | $ReadOnlyArray<string> | void,
    suppressContentEditableWarning?: boolean | void,
    suppressHydrationWarning?: boolean | void,
    accessKey?: string | void,
    contentEditable?: "inherit" | (boolean | "false" | "true") | void,
    contextMenu?: string | void,
    draggable?: (boolean | "false" | "true") | void,
    lang?: string | void,
    spellCheck?: (boolean | "false" | "true") | void,
    tabIndex?: number | void,
    radioGroup?: string | void,
    role?: $PropertyType<$Exports<"react">, "AriaRole"> | void,
    about?: string | void,
    datatype?: string | void,
    inlist?: any,
    property?: string | void,
    resource?: string | void,
    typeof?: string | void,
    vocab?: string | void,
    autoCapitalize?: string | void,
    autoCorrect?: string | void,
    autoSave?: string | void,
    itemProp?: string | void,
    itemScope?: boolean | void,
    itemType?: string | void,
    itemID?: string | void,
    itemRef?: string | void,
    results?: number | void,
    security?: string | void,
    unselectable?: "on" | "off" | void,
    inputMode?:
      | "search"
      | "numeric"
      | "none"
      | "text"
      | "decimal"
      | "tel"
      | "url"
      | "email"
      | void,
    is?: string | void,
    "aria-activedescendant"?: string | void,
    "aria-atomic"?: boolean | "false" | "true" | void,
    "aria-autocomplete"?: "both" | "none" | "inline" | "list" | void,
    "aria-busy"?: boolean | "false" | "true" | void,
    "aria-checked"?: boolean | "mixed" | "false" | "true" | void,
    "aria-colcount"?: number | void,
    "aria-colindex"?: number | void,
    "aria-colspan"?: number | void,
    "aria-controls"?: string | void,
    "aria-current"?:
      | boolean
      | "time"
      | "page"
      | "false"
      | "true"
      | "step"
      | "location"
      | "date"
      | void,
    "aria-describedby"?: string | void,
    "aria-details"?: string | void,
    "aria-disabled"?: boolean | "false" | "true" | void,
    "aria-dropeffect"?:
      | "link"
      | "none"
      | "copy"
      | "move"
      | "execute"
      | "popup"
      | void,
    "aria-errormessage"?: string | void,
    "aria-expanded"?: boolean | "false" | "true" | void,
    "aria-flowto"?: string | void,
    "aria-grabbed"?: boolean | "false" | "true" | void,
    "aria-haspopup"?:
      | boolean
      | "dialog"
      | "menu"
      | "listbox"
      | "grid"
      | "false"
      | "true"
      | "tree"
      | void,
    "aria-hidden"?: boolean | "false" | "true" | void,
    "aria-invalid"?: boolean | "false" | "true" | "grammar" | "spelling" | void,
    "aria-keyshortcuts"?: string | void,
    "aria-label"?: string | void,
    "aria-labelledby"?: string | void,
    "aria-level"?: number | void,
    "aria-live"?: "off" | "assertive" | "polite" | void,
    "aria-modal"?: boolean | "false" | "true" | void,
    "aria-multiline"?: boolean | "false" | "true" | void,
    "aria-multiselectable"?: boolean | "false" | "true" | void,
    "aria-orientation"?: "horizontal" | "vertical" | void,
    "aria-owns"?: string | void,
    "aria-placeholder"?: string | void,
    "aria-posinset"?: number | void,
    "aria-pressed"?: boolean | "mixed" | "false" | "true" | void,
    "aria-readonly"?: boolean | "false" | "true" | void,
    "aria-relevant"?:
      | "all"
      | "text"
      | "additions"
      | "additions removals"
      | "additions text"
      | "removals"
      | "removals additions"
      | "removals text"
      | "text additions"
      | "text removals"
      | void,
    "aria-required"?: boolean | "false" | "true" | void,
    "aria-roledescription"?: string | void,
    "aria-rowcount"?: number | void,
    "aria-rowindex"?: number | void,
    "aria-rowspan"?: number | void,
    "aria-selected"?: boolean | "false" | "true" | void,
    "aria-setsize"?: number | void,
    "aria-sort"?: "none" | "other" | "ascending" | "descending" | void,
    "aria-valuemax"?: number | void,
    "aria-valuemin"?: number | void,
    "aria-valuenow"?: number | void,
    "aria-valuetext"?: string | void,
    dangerouslySetInnerHTML?: {
      __html: string,
      ...
    } | void,
    onCopy?: $PropertyType<$Exports<"react">, "ClipboardEventHandler"> | void,
    onCopyCapture?: $PropertyType<
      $Exports<"react">,
      "ClipboardEventHandler"
    > | void,
    onCut?: $PropertyType<$Exports<"react">, "ClipboardEventHandler"> | void,
    onCutCapture?: $PropertyType<
      $Exports<"react">,
      "ClipboardEventHandler"
    > | void,
    onPaste?: $PropertyType<$Exports<"react">, "ClipboardEventHandler"> | void,
    onPasteCapture?: $PropertyType<
      $Exports<"react">,
      "ClipboardEventHandler"
    > | void,
    onCompositionEnd?: $PropertyType<
      $Exports<"react">,
      "CompositionEventHandler"
    > | void,
    onCompositionEndCapture?: $PropertyType<
      $Exports<"react">,
      "CompositionEventHandler"
    > | void,
    onCompositionStart?: $PropertyType<
      $Exports<"react">,
      "CompositionEventHandler"
    > | void,
    onCompositionStartCapture?: $PropertyType<
      $Exports<"react">,
      "CompositionEventHandler"
    > | void,
    onCompositionUpdate?: $PropertyType<
      $Exports<"react">,
      "CompositionEventHandler"
    > | void,
    onCompositionUpdateCapture?: $PropertyType<
      $Exports<"react">,
      "CompositionEventHandler"
    > | void,
    onFocus?: $PropertyType<$Exports<"react">, "FocusEventHandler"> | void,
    onFocusCapture?: $PropertyType<
      $Exports<"react">,
      "FocusEventHandler"
    > | void,
    onBlur?: $PropertyType<$Exports<"react">, "FocusEventHandler"> | void,
    onBlurCapture?: $PropertyType<
      $Exports<"react">,
      "FocusEventHandler"
    > | void,
    onChangeCapture?: $PropertyType<
      $Exports<"react">,
      "FormEventHandler"
    > | void,
    onBeforeInput?: $PropertyType<$Exports<"react">, "FormEventHandler"> | void,
    onBeforeInputCapture?: $PropertyType<
      $Exports<"react">,
      "FormEventHandler"
    > | void,
    onInput?: $PropertyType<$Exports<"react">, "FormEventHandler"> | void,
    onInputCapture?: $PropertyType<
      $Exports<"react">,
      "FormEventHandler"
    > | void,
    onReset?: $PropertyType<$Exports<"react">, "FormEventHandler"> | void,
    onResetCapture?: $PropertyType<
      $Exports<"react">,
      "FormEventHandler"
    > | void,
    onSubmit?: $PropertyType<$Exports<"react">, "FormEventHandler"> | void,
    onSubmitCapture?: $PropertyType<
      $Exports<"react">,
      "FormEventHandler"
    > | void,
    onInvalid?: $PropertyType<$Exports<"react">, "FormEventHandler"> | void,
    onInvalidCapture?: $PropertyType<
      $Exports<"react">,
      "FormEventHandler"
    > | void,
    onLoad?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onLoadCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onError?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onErrorCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onKeyDown?: $PropertyType<$Exports<"react">, "KeyboardEventHandler"> | void,
    onKeyDownCapture?: $PropertyType<
      $Exports<"react">,
      "KeyboardEventHandler"
    > | void,
    onKeyPress?: $PropertyType<
      $Exports<"react">,
      "KeyboardEventHandler"
    > | void,
    onKeyPressCapture?: $PropertyType<
      $Exports<"react">,
      "KeyboardEventHandler"
    > | void,
    onKeyUp?: $PropertyType<$Exports<"react">, "KeyboardEventHandler"> | void,
    onKeyUpCapture?: $PropertyType<
      $Exports<"react">,
      "KeyboardEventHandler"
    > | void,
    onAbort?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onAbortCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onCanPlay?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onCanPlayCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onCanPlayThrough?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onCanPlayThroughCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onDurationChange?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onDurationChangeCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onEmptied?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onEmptiedCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onEncrypted?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onEncryptedCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onEnded?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onEndedCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onLoadedData?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onLoadedDataCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onLoadedMetadata?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onLoadedMetadataCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onLoadStart?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onLoadStartCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onPause?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onPauseCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onPlay?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onPlayCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onPlaying?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onPlayingCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onProgress?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onProgressCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onRateChange?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onRateChangeCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onSeeked?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onSeekedCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onSeeking?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onSeekingCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onStalled?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onStalledCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onSuspend?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onSuspendCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onTimeUpdate?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onTimeUpdateCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onVolumeChange?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onVolumeChangeCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onWaiting?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onWaitingCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onAuxClick?: $PropertyType<$Exports<"react">, "MouseEventHandler"> | void,
    onAuxClickCapture?: $PropertyType<
      $Exports<"react">,
      "MouseEventHandler"
    > | void,
    onClick?: $PropertyType<$Exports<"react">, "MouseEventHandler"> | void,
    onClickCapture?: $PropertyType<
      $Exports<"react">,
      "MouseEventHandler"
    > | void,
    onContextMenu?: $PropertyType<
      $Exports<"react">,
      "MouseEventHandler"
    > | void,
    onContextMenuCapture?: $PropertyType<
      $Exports<"react">,
      "MouseEventHandler"
    > | void,
    onDoubleClick?: $PropertyType<
      $Exports<"react">,
      "MouseEventHandler"
    > | void,
    onDoubleClickCapture?: $PropertyType<
      $Exports<"react">,
      "MouseEventHandler"
    > | void,
    onDrag?: $PropertyType<$Exports<"react">, "DragEventHandler"> | void,
    onDragCapture?: $PropertyType<$Exports<"react">, "DragEventHandler"> | void,
    onDragEnd?: $PropertyType<$Exports<"react">, "DragEventHandler"> | void,
    onDragEndCapture?: $PropertyType<
      $Exports<"react">,
      "DragEventHandler"
    > | void,
    onDragEnter?: $PropertyType<$Exports<"react">, "DragEventHandler"> | void,
    onDragEnterCapture?: $PropertyType<
      $Exports<"react">,
      "DragEventHandler"
    > | void,
    onDragExit?: $PropertyType<$Exports<"react">, "DragEventHandler"> | void,
    onDragExitCapture?: $PropertyType<
      $Exports<"react">,
      "DragEventHandler"
    > | void,
    onDragLeave?: $PropertyType<$Exports<"react">, "DragEventHandler"> | void,
    onDragLeaveCapture?: $PropertyType<
      $Exports<"react">,
      "DragEventHandler"
    > | void,
    onDragOver?: $PropertyType<$Exports<"react">, "DragEventHandler"> | void,
    onDragOverCapture?: $PropertyType<
      $Exports<"react">,
      "DragEventHandler"
    > | void,
    onDragStart?: $PropertyType<$Exports<"react">, "DragEventHandler"> | void,
    onDragStartCapture?: $PropertyType<
      $Exports<"react">,
      "DragEventHandler"
    > | void,
    onDrop?: $PropertyType<$Exports<"react">, "DragEventHandler"> | void,
    onDropCapture?: $PropertyType<$Exports<"react">, "DragEventHandler"> | void,
    onMouseDown?: $PropertyType<$Exports<"react">, "MouseEventHandler"> | void,
    onMouseDownCapture?: $PropertyType<
      $Exports<"react">,
      "MouseEventHandler"
    > | void,
    onMouseEnter?: $PropertyType<$Exports<"react">, "MouseEventHandler"> | void,
    onMouseLeave?: $PropertyType<$Exports<"react">, "MouseEventHandler"> | void,
    onMouseMove?: $PropertyType<$Exports<"react">, "MouseEventHandler"> | void,
    onMouseMoveCapture?: $PropertyType<
      $Exports<"react">,
      "MouseEventHandler"
    > | void,
    onMouseOut?: $PropertyType<$Exports<"react">, "MouseEventHandler"> | void,
    onMouseOutCapture?: $PropertyType<
      $Exports<"react">,
      "MouseEventHandler"
    > | void,
    onMouseOver?: $PropertyType<$Exports<"react">, "MouseEventHandler"> | void,
    onMouseOverCapture?: $PropertyType<
      $Exports<"react">,
      "MouseEventHandler"
    > | void,
    onMouseUp?: $PropertyType<$Exports<"react">, "MouseEventHandler"> | void,
    onMouseUpCapture?: $PropertyType<
      $Exports<"react">,
      "MouseEventHandler"
    > | void,
    onSelect?: $PropertyType<$Exports<"react">, "ReactEventHandler"> | void,
    onSelectCapture?: $PropertyType<
      $Exports<"react">,
      "ReactEventHandler"
    > | void,
    onTouchCancel?: $PropertyType<
      $Exports<"react">,
      "TouchEventHandler"
    > | void,
    onTouchCancelCapture?: $PropertyType<
      $Exports<"react">,
      "TouchEventHandler"
    > | void,
    onTouchEnd?: $PropertyType<$Exports<"react">, "TouchEventHandler"> | void,
    onTouchEndCapture?: $PropertyType<
      $Exports<"react">,
      "TouchEventHandler"
    > | void,
    onTouchMove?: $PropertyType<$Exports<"react">, "TouchEventHandler"> | void,
    onTouchMoveCapture?: $PropertyType<
      $Exports<"react">,
      "TouchEventHandler"
    > | void,
    onTouchStart?: $PropertyType<$Exports<"react">, "TouchEventHandler"> | void,
    onTouchStartCapture?: $PropertyType<
      $Exports<"react">,
      "TouchEventHandler"
    > | void,
    onPointerDown?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerDownCapture?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerMove?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerMoveCapture?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerUp?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerUpCapture?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerCancel?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerCancelCapture?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerEnter?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerEnterCapture?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerLeave?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerLeaveCapture?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerOver?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerOverCapture?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerOut?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onPointerOutCapture?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onGotPointerCapture?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onGotPointerCaptureCapture?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onLostPointerCapture?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onLostPointerCaptureCapture?: $PropertyType<
      $Exports<"react">,
      "PointerEventHandler"
    > | void,
    onScroll?: $PropertyType<$Exports<"react">, "UIEventHandler"> | void,
    onScrollCapture?: $PropertyType<$Exports<"react">, "UIEventHandler"> | void,
    onWheel?: $PropertyType<$Exports<"react">, "WheelEventHandler"> | void,
    onWheelCapture?: $PropertyType<
      $Exports<"react">,
      "WheelEventHandler"
    > | void,
    onAnimationStart?: $PropertyType<
      $Exports<"react">,
      "AnimationEventHandler"
    > | void,
    onAnimationStartCapture?: $PropertyType<
      $Exports<"react">,
      "AnimationEventHandler"
    > | void,
    onAnimationEnd?: $PropertyType<
      $Exports<"react">,
      "AnimationEventHandler"
    > | void,
    onAnimationEndCapture?: $PropertyType<
      $Exports<"react">,
      "AnimationEventHandler"
    > | void,
    onAnimationIteration?: $PropertyType<
      $Exports<"react">,
      "AnimationEventHandler"
    > | void,
    onAnimationIterationCapture?: $PropertyType<
      $Exports<"react">,
      "AnimationEventHandler"
    > | void,
    onTransitionEnd?: $PropertyType<
      $Exports<"react">,
      "TransitionEventHandler"
    > | void,
    onTransitionEndCapture?: $PropertyType<
      $Exports<"react">,
      "TransitionEventHandler"
    > | void,
    shape?: string | void,
    state?: S | void,
    plain?: boolean | void,
    setState?: $PropertyType<$Exports<"react">, "Dispatch"> | void,
    ...
  },
  ...
};
