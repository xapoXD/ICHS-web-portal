import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef, useContext } from 'react';
import PropTypes from 'prop-types';
import classNames from '../../_virtual/index.js';
import { CAccordionItemContext } from './CAccordionItem.js';

var CAccordionButton = forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, rest = __rest(_a, ["children", "className"]);
    var _b = useContext(CAccordionItemContext), id = _b.id, visible = _b.visible, setVisible = _b.setVisible;
    return (React.createElement("button", __assign({ type: "button", className: classNames('accordion-button', { collapsed: !visible }, className), "aria-controls": id, "aria-expanded": visible, onClick: function () { return setVisible(!visible); } }, rest, { ref: ref }), children));
});
CAccordionButton.propTypes = {
    children: PropTypes.node,
    className: PropTypes.string,
};
CAccordionButton.displayName = 'CAccordionButton';

export { CAccordionButton };
//# sourceMappingURL=CAccordionButton.js.map
