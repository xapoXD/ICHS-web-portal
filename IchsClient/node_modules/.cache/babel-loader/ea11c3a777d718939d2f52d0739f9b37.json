{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"classPrefix\", \"className\", \"children\", \"scrollShadow\", \"customScrollbar\", \"height\", \"width\", \"style\", \"onScroll\", \"data-testid\"];\nimport React from 'react';\nimport { useClassNames } from \"../hooks/index.js\";\nimport { createChainedFunction, mergeRefs } from \"../utils/index.js\";\nimport { useScrollState } from \"./hooks/useScrollState.js\";\nvar ScrollView = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'scroll-view' : _props$classPrefix,\n    className = props.className,\n    children = props.children,\n    scrollShadow = props.scrollShadow,\n    customScrollbar = props.customScrollbar,\n    height = props.height,\n    width = props.width,\n    style = props.style,\n    onScroll = props.onScroll,\n    dataTestId = props['data-testid'],\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    merge = _useClassNames.merge,\n    withClassPrefix = _useClassNames.withClassPrefix;\n  var _useScrollState = useScrollState(scrollShadow),\n    scrollState = _useScrollState.scrollState,\n    handleScroll = _useScrollState.handleScroll,\n    bodyRef = _useScrollState.bodyRef;\n  var bodyStyles = _extends({\n    height: height,\n    width: width\n  }, style);\n  var bodyClasses = merge(className, withClassPrefix({\n    shadow: scrollShadow,\n    'thumb-top': scrollState === 'top',\n    'thumb-middle': scrollState === 'middle',\n    'thumb-bottom': scrollState === 'bottom',\n    'custom-scrollbar': customScrollbar\n  }));\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: mergeRefs(ref, bodyRef),\n    className: bodyClasses,\n    style: bodyStyles,\n    onScroll: createChainedFunction(handleScroll, onScroll),\n    \"data-testid\": dataTestId || 'scroll-view'\n  }), children);\n});\nScrollView.displayName = 'ScrollView';\nexport default ScrollView;","map":null,"metadata":{},"sourceType":"module"}