{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\nvar _excluded = [\"as\", \"bordered\", \"centered\", \"className\", \"classPrefix\", \"children\", \"closable\", \"duration\", \"full\", \"header\", \"type\", \"showIcon\", \"onClose\"];\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { STATUS } from \"../internals/constants/index.js\";\nimport { MESSAGE_STATUS_ICONS } from \"../internals/constants/statusIcons.js\";\nimport { useClassNames, useTimeout, useIsMounted, useEventCallback } from \"../internals/hooks/index.js\";\nimport { oneOf } from \"../internals/propTypes/index.js\";\nimport CloseButton from \"../internals/CloseButton/index.js\";\nimport ToastContext from \"../toaster/ToastContext.js\";\n/**\n * The `Message` component is used to display important messages to users.\n * @see https://rsuitejs.com/components/message\n */\nvar Message = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _withClassPrefix;\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    bordered = props.bordered,\n    centered = props.centered,\n    className = props.className,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'message' : _props$classPrefix,\n    children = props.children,\n    closable = props.closable,\n    _props$duration = props.duration,\n    duration = _props$duration === void 0 ? 2000 : _props$duration,\n    full = props.full,\n    header = props.header,\n    _props$type = props.type,\n    type = _props$type === void 0 ? 'info' : _props$type,\n    showIcon = props.showIcon,\n    onClose = props.onClose,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useState = useState('show'),\n    display = _useState[0],\n    setDisplay = _useState[1];\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge,\n    prefix = _useClassNames.prefix;\n  var isMounted = useIsMounted();\n  var _useContext = useContext(ToastContext),\n    usedToaster = _useContext.usedToaster;\n\n  // Timed close message\n  var _useTimeout = useTimeout(onClose, duration, usedToaster && duration > 0),\n    clear = _useTimeout.clear;\n  var handleClose = useEventCallback(function (event) {\n    setDisplay('hiding');\n    onClose === null || onClose === void 0 ? void 0 : onClose(event);\n    clear();\n    setTimeout(function () {\n      if (isMounted()) {\n        setDisplay('hide');\n      }\n    }, 1000);\n  });\n  if (display === 'hide') {\n    return null;\n  }\n  var classes = merge(className, withClassPrefix(type, display, (_withClassPrefix = {\n    full: full,\n    bordered: bordered,\n    centered: centered\n  }, _withClassPrefix['has-title'] = header, _withClassPrefix['has-icon'] = showIcon, _withClassPrefix)));\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"alert\"\n  }, rest, {\n    ref: ref,\n    className: classes\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"container\"])))\n  }, closable && /*#__PURE__*/React.createElement(CloseButton, {\n    onClick: handleClose\n  }), showIcon && /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"icon\"])))\n  }, MESSAGE_STATUS_ICONS[type]), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"content\"])))\n  }, header && /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"header\"])))\n  }, header), children && /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"body\"])))\n  }, children))));\n});\nMessage.displayName = 'Message';\nMessage.propTypes = {\n  bordered: PropTypes.bool,\n  centered: PropTypes.bool,\n  closable: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  description: PropTypes.node,\n  full: PropTypes.bool,\n  onClose: PropTypes.func,\n  showIcon: PropTypes.bool,\n  title: PropTypes.node,\n  type: oneOf(STATUS)\n};\nexport default Message;","map":null,"metadata":{},"sourceType":"module"}