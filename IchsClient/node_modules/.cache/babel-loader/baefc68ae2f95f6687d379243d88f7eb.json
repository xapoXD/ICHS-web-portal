{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"active\", \"disabled\", \"className\", \"classPrefix\", \"children\", \"eventKey\", \"style\", \"onSelect\", \"onClick\"];\nimport React from 'react';\nimport Ripple from \"../internals/Ripple/index.js\";\nimport { useClassNames, useEventCallback } from \"../internals/hooks/index.js\";\nimport { createChainedFunction } from \"../internals/utils/index.js\";\nvar PaginationButton = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'button' : _props$as,\n    active = props.active,\n    disabled = props.disabled,\n    className = props.className,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'pagination-btn' : _props$classPrefix,\n    children = props.children,\n    eventKey = props.eventKey,\n    style = props.style,\n    onSelect = props.onSelect,\n    onClick = props.onClick,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    merge = _useClassNames.merge,\n    withClassPrefix = _useClassNames.withClassPrefix;\n  var classes = merge(className, withClassPrefix({\n    active: active,\n    disabled: disabled\n  }));\n  var handleClick = useEventCallback(function (event) {\n    if (disabled) {\n      return;\n    }\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(eventKey, event);\n  });\n  var asProps = {};\n  if (typeof Component !== 'string') {\n    asProps.eventKey = eventKey;\n    asProps.active = active;\n  }\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, asProps, {\n    disabled: disabled,\n    onClick: createChainedFunction(onClick, handleClick),\n    ref: ref,\n    className: classes,\n    style: style\n  }), children, !disabled ? /*#__PURE__*/React.createElement(Ripple, null) : null);\n});\nPaginationButton.displayName = 'PaginationButton';\nexport default PaginationButton;","map":null,"metadata":{},"sourceType":"module"}