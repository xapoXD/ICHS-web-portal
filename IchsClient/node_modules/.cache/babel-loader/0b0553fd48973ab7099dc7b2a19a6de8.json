{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"className\", \"classPrefix\", \"children\", \"vertical\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from \"../internals/hooks/index.js\";\n/**\n * The Divider component is used to separate content.\n * @see https://rsuitejs.com/components/divider\n */\nvar Divider = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    className = props.className,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'divider' : _props$classPrefix,\n    children = props.children,\n    vertical = props.vertical,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    prefix = _useClassNames.prefix,\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge;\n  var classes = merge(className, withClassPrefix(vertical ? 'vertical' : 'horizontal', {\n    'with-text': children\n  }));\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"separator\"\n  }, rest, {\n    ref: ref,\n    className: classes,\n    \"aria-orientation\": vertical ? 'vertical' : 'horizontal'\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix('inner-text')\n  }, children));\n});\nDivider.displayName = 'Divider';\nDivider.propTypes = {\n  as: PropTypes.elementType,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.node,\n  vertical: PropTypes.bool\n};\nexport default Divider;","map":null,"metadata":{},"sourceType":"module"}