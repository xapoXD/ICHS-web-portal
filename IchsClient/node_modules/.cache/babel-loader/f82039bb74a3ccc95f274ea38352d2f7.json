{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"align\", \"classPrefix\", \"color\", \"className\", \"maxLines\", \"weight\", \"muted\", \"transform\", \"size\", \"style\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from \"../internals/hooks/index.js\";\nimport { oneOf } from \"../internals/propTypes/index.js\";\nvar fontSizeMap = {\n  sm: 12,\n  md: 14,\n  lg: 16,\n  xl: 18,\n  xxl: 20\n};\n/**\n *\n * The `Text` component is used to display text.\n *\n * @see https://rsuitejs.com/components/text\n */\nvar Text = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'p' : _props$as,\n    align = props.align,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'text' : _props$classPrefix,\n    color = props.color,\n    className = props.className,\n    maxLines = props.maxLines,\n    weight = props.weight,\n    muted = props.muted,\n    transform = props.transform,\n    size = props.size,\n    style = props.style,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge;\n  var classes = merge(className, withClassPrefix(color, align, weight, transform, {\n    muted: muted,\n    ellipsis: maxLines\n  }));\n  var styles = _extends({\n    fontSize: fontSizeMap[size] || size\n  }, maxLines ? {\n    WebkitLineClamp: maxLines\n  } : null, style);\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes,\n    style: styles\n  }));\n});\nText.displayName = 'Text';\nText.propTypes = {\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  as: PropTypes.elementType,\n  size: PropTypes.oneOfType([PropTypes.number, oneOf(['sm', 'md', 'lg', 'xl', 'xxl'])]),\n  muted: PropTypes.bool,\n  transform: oneOf(['uppercase', 'lowercase', 'capitalize']),\n  align: oneOf(['left', 'center', 'right', 'justify']),\n  weight: oneOf(['thin', 'light', 'regular', 'medium', 'semibold', 'bold', 'extrabold']),\n  maxLines: PropTypes.number\n};\nexport default Text;","map":null,"metadata":{},"sourceType":"module"}