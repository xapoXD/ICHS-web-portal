{"ast":null,"code":"import { MixedType } from './MixedType';\nexport class DateType extends MixedType {\n  constructor(errorMessage) {\n    super('date');\n    super.pushRule({\n      onValid: value => !/Invalid|NaN/.test(new Date(value).toString()),\n      errorMessage: errorMessage || this.locale.type\n    });\n  }\n  range(min, max, errorMessage = this.locale.range) {\n    super.pushRule({\n      onValid: value => new Date(value) >= new Date(min) && new Date(value) <= new Date(max),\n      errorMessage,\n      params: {\n        min,\n        max\n      }\n    });\n    return this;\n  }\n  min(min, errorMessage = this.locale.min) {\n    super.pushRule({\n      onValid: value => new Date(value) >= new Date(min),\n      errorMessage,\n      params: {\n        min\n      }\n    });\n    return this;\n  }\n  max(max, errorMessage = this.locale.max) {\n    super.pushRule({\n      onValid: value => new Date(value) <= new Date(max),\n      errorMessage,\n      params: {\n        max\n      }\n    });\n    return this;\n  }\n}\nexport default function getDateType(errorMessage) {\n  return new DateType(errorMessage);\n}","map":null,"metadata":{},"sourceType":"module"}