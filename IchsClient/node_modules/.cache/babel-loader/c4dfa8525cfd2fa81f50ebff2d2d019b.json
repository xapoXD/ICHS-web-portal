{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _templateObject, _templateObject2;\nvar _excluded = [\"as\", \"classPrefix\", \"size\", \"color\", \"children\", \"closable\", \"className\", \"onClose\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames, useCustom } from \"../internals/hooks/index.js\";\nimport CloseButton from \"../internals/CloseButton/index.js\";\n/**\n * The `Tag` component is used to label and categorize.\n * It can be used to mark the status of an object or classify it into different categories.\n *\n * @see https://rsuitejs.com/components/tag\n */\nvar Tag = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'tag' : _props$classPrefix,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 'md' : _props$size,\n    _props$color = props.color,\n    color = _props$color === void 0 ? 'default' : _props$color,\n    children = props.children,\n    closable = props.closable,\n    className = props.className,\n    onClose = props.onClose,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    prefix = _useClassNames.prefix,\n    merge = _useClassNames.merge;\n  var classes = merge(className, withClassPrefix(size, color, {\n    closable: closable\n  }));\n  var _useCustom = useCustom(),\n    locale = _useCustom.locale;\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"text\"])))\n  }, children), closable && /*#__PURE__*/React.createElement(CloseButton, {\n    className: prefix(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"icon-close\"]))),\n    onClick: onClose,\n    tabIndex: -1,\n    locale: {\n      closeLabel: locale === null || locale === void 0 ? void 0 : locale.remove\n    }\n  }));\n});\nTag.displayName = 'Tag';\nTag.propTypes = {\n  closable: PropTypes.bool,\n  classPrefix: PropTypes.string,\n  onClose: PropTypes.func,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  as: PropTypes.elementType\n};\nexport default Tag;","map":null,"metadata":{},"sourceType":"module"}