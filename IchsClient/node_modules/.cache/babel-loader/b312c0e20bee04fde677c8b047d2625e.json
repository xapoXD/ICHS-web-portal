{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"as\", \"children\", \"treeRootClassName\", \"multiselectable\", \"style\", \"height\"];\nimport React from 'react';\nimport useCombobox from \"../Picker/hooks/useCombobox.js\";\nimport ScrollView from \"../ScrollView/index.js\";\nimport { useTreeContextProps } from \"./TreeProvider.js\";\nvar ScrollShadowView = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(ScrollView, _extends({\n    scrollShadow: true,\n    ref: ref\n  }, props));\n});\nvar TreeView = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    as = _props$as === void 0 ? 'div' : _props$as,\n    children = props.children,\n    treeRootClassName = props.treeRootClassName,\n    multiselectable = props.multiselectable,\n    style = props.style,\n    height = props.height,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useTreeContextProps = useTreeContextProps(),\n    scrollShadow = _useTreeContextProps.scrollShadow,\n    virtualized = _useTreeContextProps.virtualized;\n  var _useCombobox = useCombobox(),\n    id = _useCombobox.id,\n    labelId = _useCombobox.labelId,\n    popupType = _useCombobox.popupType;\n\n  // If the tree is virtualized, the scroll shadow is not needed.\n  var Component = scrollShadow && !virtualized ? ScrollShadowView : as;\n\n  // If the tree is virtualized, the height is not needed.\n  var viewStyles = _extends({\n    height: virtualized ? undefined : height\n  }, style);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"tree\",\n    style: viewStyles,\n    id: id ? id + \"-\" + popupType : undefined,\n    \"aria-multiselectable\": multiselectable,\n    \"aria-labelledby\": labelId,\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"div\", {\n    className: treeRootClassName\n  }, children));\n});\nexport default TreeView;","map":null,"metadata":{},"sourceType":"module"}