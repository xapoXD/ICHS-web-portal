{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _templateObject;\nvar _excluded = [\"active\", \"as\", \"checkboxAs\", \"classPrefix\", \"checkable\", \"disabled\", \"value\", \"focus\", \"children\", \"className\", \"indeterminate\", \"labelClickable\", \"onKeyDown\", \"onSelect\", \"onCheck\", \"onSelectItem\", \"renderCheckbox\"];\nimport React from 'react';\nimport { useClassNames, useEventCallback } from \"../hooks/index.js\";\nimport Checkbox from \"../../Checkbox/index.js\";\nimport useCombobox from \"./hooks/useCombobox.js\";\nvar ListCheckItem = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$active = props.active,\n    active = _props$active === void 0 ? false : _props$active,\n    _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$checkboxAs = props.checkboxAs,\n    CheckboxItem = _props$checkboxAs === void 0 ? Checkbox : _props$checkboxAs,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'check-item' : _props$classPrefix,\n    _props$checkable = props.checkable,\n    checkable = _props$checkable === void 0 ? true : _props$checkable,\n    disabled = props.disabled,\n    value = props.value,\n    focus = props.focus,\n    children = props.children,\n    className = props.className,\n    indeterminate = props.indeterminate,\n    labelClickable = props.labelClickable,\n    onKeyDown = props.onKeyDown,\n    onSelect = props.onSelect,\n    onCheck = props.onCheck,\n    onSelectItem = props.onSelectItem,\n    renderCheckbox = props.renderCheckbox,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var handleChange = useEventCallback(function (value, checked, event) {\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(value, event, checked);\n  });\n  var handleCheck = useEventCallback(function (event) {\n    if (!disabled) {\n      onCheck === null || onCheck === void 0 ? void 0 : onCheck(value, event, !active);\n    }\n  });\n  var handleSelectItem = useEventCallback(function (event) {\n    if (!disabled) {\n      onSelectItem === null || onSelectItem === void 0 ? void 0 : onSelectItem(value, event, !active);\n    }\n  });\n  var _useCombobox = useCombobox(),\n    id = _useCombobox.id;\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge,\n    rootPrefix = _useClassNames.rootPrefix;\n  var checkboxItemClasses = withClassPrefix({\n    focus: focus\n  });\n  var checkboxProps = {\n    checkable: checkable,\n    children: children,\n    checked: active,\n    className: checkboxItemClasses,\n    disabled: disabled,\n    value: value,\n    indeterminate: indeterminate,\n    labelClickable: labelClickable,\n    onKeyDown: disabled ? undefined : onKeyDown,\n    onChange: handleChange,\n    onClick: handleSelectItem,\n    onCheckboxClick: handleCheck\n  };\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"option\",\n    \"aria-selected\": active,\n    \"aria-disabled\": disabled,\n    id: id ? id + \"-opt-\" + value : undefined,\n    \"data-key\": value\n  }, rest, {\n    ref: ref,\n    className: merge(className, rootPrefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"picker-list-item\"])))),\n    tabIndex: -1\n  }), renderCheckbox ? renderCheckbox(checkboxProps) : /*#__PURE__*/React.createElement(CheckboxItem, _extends({\n    role: \"checkbox\"\n  }, checkboxProps)));\n});\nListCheckItem.displayName = 'ListCheckItem';\nexport default ListCheckItem;","map":null,"metadata":{},"sourceType":"module"}