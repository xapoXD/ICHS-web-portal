{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nimport { useEventCallback } from \"../../internals/hooks/index.js\";\nfunction useFocusState(props) {\n  var target = props.target;\n  var _useState = useState(false),\n    active = _useState[0],\n    setActive = _useState[1];\n  var _useState2 = useState(null),\n    focusItemValue = _useState2[0],\n    setFocusItemValue = _useState2[1];\n  var focusTarget = useEventCallback(function () {\n    var _target$current;\n    (_target$current = target.current) === null || _target$current === void 0 ? void 0 : _target$current.focus();\n  });\n  var onEnter = useEventCallback(function (node) {\n    var _props$onEnter;\n    setActive(true);\n    (_props$onEnter = props.onEnter) === null || _props$onEnter === void 0 ? void 0 : _props$onEnter.call(props, node);\n  });\n  var onExit = useEventCallback(function (node) {\n    var _props$onExit;\n    setActive(false);\n    focusTarget();\n    (_props$onExit = props.onExit) === null || _props$onExit === void 0 ? void 0 : _props$onExit.call(props, node);\n  });\n  return {\n    active: active,\n    focusItemValue: focusItemValue,\n    setFocusItemValue: setFocusItemValue,\n    triggerProps: {\n      onEnter: onEnter,\n      onExit: onExit\n    }\n  };\n}\nexport default useFocusState;","map":null,"metadata":{},"sourceType":"module"}