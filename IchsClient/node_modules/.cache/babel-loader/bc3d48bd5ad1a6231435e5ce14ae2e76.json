{"ast":null,"code":"'use client';\n\n/**\n * Calculate columns to be displayed:\n *\n * - Every ancestor level of activeItem should be displayed\n * - The level that activeItem is at should be displayed\n * - If activeItem is a parent node, its child level should be displayed\n *\n * @param items\n * @param value\n * @param options\n * @returns\n */\nexport function getColumnsAndPaths(items, pathTarget, options) {\n  var getParent = options.getParent,\n    getChildren = options.getChildren;\n  if (!pathTarget) {\n    return {\n      columns: [items],\n      path: []\n    };\n  }\n  var columns = [];\n  var path = [pathTarget];\n  var children = getChildren(pathTarget);\n  if (children && children.length > 0) {\n    columns.unshift(children);\n  }\n  for (var parent = getParent(pathTarget); !!parent; parent = getParent(parent)) {\n    var _getChildren;\n    columns.unshift((_getChildren = getChildren(parent)) !== null && _getChildren !== void 0 ? _getChildren : []);\n    path.unshift(parent);\n  }\n  columns.unshift(items);\n  return {\n    columns: columns,\n    path: path\n  };\n}","map":null,"metadata":{},"sourceType":"module"}