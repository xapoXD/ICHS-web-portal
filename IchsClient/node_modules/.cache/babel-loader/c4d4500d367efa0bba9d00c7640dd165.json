{"ast":null,"code":"'use client';\n\n// Ref: https://github.com/thefrontside/deprecated-prop-type/blob/master/deprecated.js\nimport { warnOnce } from \"../utils/index.js\";\n\n/**\n * Prints deprecation message when user uses a deprecated prop\n *\n * @deprecated Use {@link deprecatePropTypeNew} which prints clearer messages.\n */\nexport default function deprecatePropType(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    // Note ...rest here\n    if (props[propName] != null) {\n      var message = \"\\\"\" + propName + \"\\\" property of \\\"\" + componentName + \"\\\" has been deprecated.\\n\" + explanation;\n      warnOnce(message);\n    }\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n    return propType.apply(void 0, [props, propName, componentName].concat(rest)); // and here\n  };\n}\n\n/**\n * Prints deprecation message when user uses a deprecated prop\n *\n * @example\n *\n *   deprecatePropTypeNew(PropTypes.bool, 'Use Dropdown.Separator component instead.')\n *\n */\nexport function deprecatePropTypeNew(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    // Note ...rest here\n    if (props[propName] != null) {\n      var message = \"[rsuite] \\\"\" + propName + \"\\\" property of \" + componentName + \" component has been deprecated.\\n\" + explanation;\n      warnOnce(message);\n    }\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      rest[_key2 - 3] = arguments[_key2];\n    }\n    return propType.apply(void 0, [props, propName, componentName].concat(rest)); // and here\n  };\n}","map":null,"metadata":{},"sourceType":"module"}