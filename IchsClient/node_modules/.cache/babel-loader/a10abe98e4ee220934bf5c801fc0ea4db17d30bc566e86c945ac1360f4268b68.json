{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\Diploma\\\\ICHS\\\\IchsClient\\\\src\\\\components\\\\custom\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MapModel.css'; // Import your CSS file for styling\nimport { ReactComponent as CzechRepublicMap } from './cz.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getColor = value => {\n  return value === true ? '#0FCEA0' : '#D25C5C'; // green : red \n};\nconst MapComponent = ({\n  serverResponse\n}) => {\n  _s();\n  const [regionColors, setRegionColors] = useState({});\n\n  // Update region colors whenever serverResponse changes\n  useEffect(() => {\n    const updatedColors = {};\n    Object.keys(serverResponse).forEach(regionId => {\n      const {\n        value\n      } = serverResponse[regionId];\n      updatedColors[regionId] = getColor(value);\n    });\n    setRegionColors(updatedColors);\n  }, [serverResponse]); // Include serverResponse in dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CzechRepublicMap, {\n        className: \"czech-map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: \"true\",\n      children: `\n        .czech-map #CZ10 {\n          fill: ${regionColors[\"CZ10\"] || 'gray'};\n        }\n        .czech-map #CZ63 {\n          fill: ${regionColors[\"CZ63\"] || 'gray'};\n        }\n        .czech-map #CZ52 {\n          fill: ${regionColors[\"CZ52\"] || 'gray'};\n        }\n        .czech-map #CZ42 {\n          fill: ${regionColors[\"CZ42\"] || 'gray'};\n        }\n        .czech-map #CZ31 {\n          fill: ${regionColors[\"CZ31\"] || 'gray'};\n        }\n        .czech-map #CZ64 {\n          fill: ${regionColors[\"CZ64\"] || 'gray'};\n        }\n        .czech-map #CZ41 {\n          fill: ${regionColors[\"CZ41\"] || 'gray'};\n        }\n        .czech-map #CZ51 {\n          fill: ${regionColors[\"CZ51\"] || 'gray'};\n        }\n        .czech-map #CZ80 {\n          fill: ${regionColors[\"CZ80\"] || 'gray'};\n        }\n        .czech-map #CZ71 {\n          fill: ${regionColors[\"CZ71\"] || 'gray'};\n        }\n        .czech-map #CZ53 {\n          fill: ${regionColors[\"CZ53\"] || 'gray'};\n        }\n        .czech-map #CZ32 {\n          fill: ${regionColors[\"CZ32\"] || 'gray'};\n        }\n        .czech-map #CZ20 {\n          fill: ${regionColors[\"CZ20\"] || 'gray'};\n        }\n        .czech-map #CZ72 {\n          fill: ${regionColors[\"CZ72\"] || 'gray'};\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"dLitZVM/Aa2i01RSFWRfglHwI5Q=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","ReactComponent","CzechRepublicMap","jsxDEV","_jsxDEV","getColor","value","MapComponent","serverResponse","_s","regionColors","setRegionColors","updatedColors","Object","keys","forEach","regionId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","jsx","_c","$RefreshReg$"],"sources":["D:/School/Diploma/ICHS/IchsClient/src/components/custom/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './MapModel.css'; // Import your CSS file for styling\nimport { ReactComponent as CzechRepublicMap } from './cz.svg';\n\nconst getColor = (value) => {\n  return value === true ? '#0FCEA0' : '#D25C5C'; // green : red \n};\n\nconst MapComponent = ({ serverResponse }) => {\n  const [regionColors, setRegionColors] = useState({});\n\n  // Update region colors whenever serverResponse changes\n  useEffect(() => {\n    const updatedColors = {};\n    Object.keys(serverResponse).forEach((regionId) => {\n      const { value } = serverResponse[regionId];\n      updatedColors[regionId] = getColor(value);\n    });\n    setRegionColors(updatedColors);\n  }, [serverResponse]); // Include serverResponse in dependency array\n\n  return (\n    <div>\n      <div>\n        <CzechRepublicMap className=\"czech-map\" />\n      </div>\n\n      {/* Use inline styles to dynamically set fill colors */}\n      <style jsx=\"true\">{`\n        .czech-map #CZ10 {\n          fill: ${regionColors[\"CZ10\"] || 'gray'};\n        }\n        .czech-map #CZ63 {\n          fill: ${regionColors[\"CZ63\"] || 'gray'};\n        }\n        .czech-map #CZ52 {\n          fill: ${regionColors[\"CZ52\"] || 'gray'};\n        }\n        .czech-map #CZ42 {\n          fill: ${regionColors[\"CZ42\"] || 'gray'};\n        }\n        .czech-map #CZ31 {\n          fill: ${regionColors[\"CZ31\"] || 'gray'};\n        }\n        .czech-map #CZ64 {\n          fill: ${regionColors[\"CZ64\"] || 'gray'};\n        }\n        .czech-map #CZ41 {\n          fill: ${regionColors[\"CZ41\"] || 'gray'};\n        }\n        .czech-map #CZ51 {\n          fill: ${regionColors[\"CZ51\"] || 'gray'};\n        }\n        .czech-map #CZ80 {\n          fill: ${regionColors[\"CZ80\"] || 'gray'};\n        }\n        .czech-map #CZ71 {\n          fill: ${regionColors[\"CZ71\"] || 'gray'};\n        }\n        .czech-map #CZ53 {\n          fill: ${regionColors[\"CZ53\"] || 'gray'};\n        }\n        .czech-map #CZ32 {\n          fill: ${regionColors[\"CZ32\"] || 'gray'};\n        }\n        .czech-map #CZ20 {\n          fill: ${regionColors[\"CZ20\"] || 'gray'};\n        }\n        .czech-map #CZ72 {\n          fill: ${regionColors[\"CZ72\"] || 'gray'};\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB,CAAC,CAAC;AACzB,SAASC,cAAc,IAAIC,gBAAgB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,OAAOA,KAAK,KAAK,IAAI,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC;AACjD,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,CAAC,CAAC;IACxBC,MAAM,CAACC,IAAI,CAACN,cAAc,CAAC,CAACO,OAAO,CAAEC,QAAQ,IAAK;MAChD,MAAM;QAAEV;MAAM,CAAC,GAAGE,cAAc,CAACQ,QAAQ,CAAC;MAC1CJ,aAAa,CAACI,QAAQ,CAAC,GAAGX,QAAQ,CAACC,KAAK,CAAC;IAC3C,CAAC,CAAC;IACFK,eAAe,CAACC,aAAa,CAAC;EAChC,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEtB,oBACEJ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,eACEb,OAAA,CAACF,gBAAgB;QAACgB,SAAS,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eAGNlB,OAAA;MAAOmB,GAAG,EAAC,MAAM;MAAAN,QAAA,EAAE;AACzB;AACA,kBAAkBP,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;AACA,kBAAkBA,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;AACA,kBAAkBA,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;AACA,kBAAkBA,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;AACA,kBAAkBA,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;AACA,kBAAkBA,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;AACA,kBAAkBA,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;AACA,kBAAkBA,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;AACA,kBAAkBA,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;AACA,kBAAkBA,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;AACA,kBAAkBA,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;AACA,kBAAkBA,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;AACA,kBAAkBA,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;AACA,kBAAkBA,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM;AAChD;AACA;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACb,EAAA,CAlEIF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAoElB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}