{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nexport var initialState = {\n  items: []\n};\nexport var DropdownActionType = /*#__PURE__*/function (DropdownActionType) {\n  DropdownActionType[DropdownActionType[\"RegisterItem\"] = 0] = \"RegisterItem\";\n  DropdownActionType[DropdownActionType[\"UnregisterItem\"] = 1] = \"UnregisterItem\";\n  DropdownActionType[DropdownActionType[\"UpdateItem\"] = 2] = \"UpdateItem\";\n  return DropdownActionType;\n}({});\nexport function reducer(state, action) {\n  if (state === void 0) {\n    state = initialState;\n  }\n  switch (action.type) {\n    case DropdownActionType.RegisterItem:\n      if (state.items.find(function (item) {\n        return item.id === action.payload.id;\n      })) {\n        return _extends({}, state, {\n          items: state.items.map(function (item) {\n            if (item.id === action.payload.id) {\n              return _extends({}, item, {\n                props: _extends({}, item.props, {\n                  selected: action.payload.props.selected\n                })\n              });\n            }\n            return item;\n          })\n        });\n      }\n      return _extends({}, state, {\n        items: [].concat(state.items, [{\n          id: action.payload.id,\n          props: action.payload.props\n        }])\n      });\n    case DropdownActionType.UnregisterItem:\n      return _extends({}, state, {\n        items: state.items.filter(function (item) {\n          return item.id !== action.payload.id;\n        })\n      });\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}