{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"icon\", \"placement\", \"children\", \"circle\", \"classPrefix\", \"className\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { oneOf } from \"../internals/propTypes/index.js\";\nimport { useClassNames } from \"../internals/hooks/index.js\";\nimport Button from \"../Button/index.js\";\n/**\n * The `IconButton` component is used to specify a button with icon.\n * @see https://rsuitejs.com/components/button\n */\nvar IconButton = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var icon = props.icon,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? 'left' : _props$placement,\n    children = props.children,\n    circle = props.circle,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'btn-icon' : _props$classPrefix,\n    className = props.className,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    merge = _useClassNames.merge,\n    withClassPrefix = _useClassNames.withClassPrefix;\n  var classes = merge(className, withClassPrefix(\"placement-\" + placement, {\n    circle: circle,\n    'with-text': typeof children !== 'undefined'\n  }));\n  return /*#__PURE__*/React.createElement(Button, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }), icon, children);\n});\nIconButton.displayName = 'IconButton';\nIconButton.propTypes = {\n  className: PropTypes.string,\n  icon: PropTypes.any,\n  classPrefix: PropTypes.string,\n  circle: PropTypes.bool,\n  children: PropTypes.node,\n  placement: oneOf(['left', 'right'])\n};\nexport default IconButton;","map":null,"metadata":{},"sourceType":"module"}