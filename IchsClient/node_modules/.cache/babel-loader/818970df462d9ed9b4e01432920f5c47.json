{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _excluded = [\"placement\"];\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ToastContainer from \"./ToastContainer.js\";\nvar defaultContainerId = 'default';\nvar containers = new Map();\n\n/**\n * Create a container by Id.\n * @param containerId\n * @param options\n */\nfunction createContainer(_x, _x2) {\n  return _createContainer.apply(this, arguments);\n}\n/**\n * Get the container by ID. Use default ID when ID is not available.\n * @param containerId\n */\nfunction _createContainer() {\n  _createContainer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(containerId, props) {\n    var _yield$ToastContainer, container;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return ToastContainer.getInstance(props);\n        case 2:\n          _yield$ToastContainer = _context.sent;\n          container = _yield$ToastContainer[0];\n          containers.set(containerId || defaultContainerId, container);\n          return _context.abrupt(\"return\", container);\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _createContainer.apply(this, arguments);\n}\nfunction getContainer(containerId) {\n  if (containers.size == 0) {\n    return null;\n  }\n  return containers.get(containerId || defaultContainerId);\n}\nvar toaster = function toaster(message) {\n  return toaster.push(message);\n};\ntoaster.push = function (message, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _options = options,\n    containerId = _options.placement,\n    restOptions = _objectWithoutPropertiesLoose(_options, _excluded);\n  var container = getContainer(containerId);\n  if (container !== null && container !== void 0 && container.current) {\n    return container.current.push(message, restOptions);\n  }\n  return createContainer(containerId !== null && containerId !== void 0 ? containerId : '', options).then(function (ref) {\n    var _ref$current;\n    return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.push(message, restOptions);\n  });\n};\ntoaster.remove = function (key) {\n  containers.forEach(function (c) {\n    var _c$current;\n    return (_c$current = c.current) === null || _c$current === void 0 ? void 0 : _c$current.remove(key);\n  });\n};\ntoaster.clear = function () {\n  containers.forEach(function (c) {\n    var _c$current2;\n    return (_c$current2 = c.current) === null || _c$current2 === void 0 ? void 0 : _c$current2.clear();\n  });\n};\nexport default toaster;","map":null,"metadata":{},"sourceType":"module"}