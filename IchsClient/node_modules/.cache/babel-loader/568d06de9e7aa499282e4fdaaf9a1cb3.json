{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"classPrefix\", \"spacing\", \"className\", \"children\", \"stack\", \"size\", \"style\"];\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from \"../internals/hooks/index.js\";\nimport { isIE } from \"../internals/utils/index.js\";\nimport { oneOf } from \"../internals/propTypes/index.js\";\nexport var AvatarGroupContext = /*#__PURE__*/React.createContext({});\n\n/**\n * The AvatarGroup component is used to represent a collection of avatars.\n * @see https://rsuitejs.com/components/avatar\n */\nvar AvatarGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'avatar-group' : _props$classPrefix,\n    spacing = props.spacing,\n    className = props.className,\n    children = props.children,\n    stack = props.stack,\n    size = props.size,\n    style = props.style,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge;\n  var classes = merge(className, withClassPrefix({\n    stack: stack\n  }));\n  var contextValue = useMemo(function () {\n    return {\n      size: size\n    };\n  }, [size]);\n  var styles = isIE() ? style : _extends({}, style, {\n    gap: spacing\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\"\n  }, rest, {\n    ref: ref,\n    className: classes,\n    style: styles\n  }), /*#__PURE__*/React.createElement(AvatarGroupContext.Provider, {\n    value: contextValue\n  }, children));\n});\nAvatarGroup.displayName = 'AvatarGroup';\nAvatarGroup.propTypes = {\n  as: PropTypes.elementType,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  stack: PropTypes.bool,\n  spacing: PropTypes.number,\n  size: oneOf(['lg', 'md', 'sm', 'xs'])\n};\nexport default AvatarGroup;","map":null,"metadata":{},"sourceType":"module"}