{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"disableShortcut\", \"onShortcutClick\", \"calendarDate\", \"ranges\", \"locale\"],\n  _excluded2 = [\"value\", \"closeOverlay\", \"label\"];\nimport React, { useCallback, useState } from 'react';\nimport Button from \"../Button/index.js\";\nimport Stack from \"../Stack/index.js\";\nimport { useUpdateEffect } from \"../internals/hooks/index.js\";\nimport { getDefaultRanges, getRanges } from \"./utils.js\";\nvar PredefinedRanges = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var className = props.className,\n    disableShortcut = props.disableShortcut,\n    onShortcutClick = props.onShortcutClick,\n    calendarDate = props.calendarDate,\n    rangesProp = props.ranges,\n    locale = props.locale,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useState = useState(getRanges(props)),\n    ranges = _useState[0],\n    setRanges = _useState[1];\n  useUpdateEffect(function () {\n    setRanges(getRanges({\n      ranges: rangesProp,\n      calendarDate: calendarDate\n    }));\n  }, [calendarDate, rangesProp]);\n  var hasLocaleKey = useCallback(function (key) {\n    return getDefaultRanges(calendarDate).some(function (item) {\n      return item.label === key;\n    });\n  }, [calendarDate]);\n  if (ranges.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(Stack, _extends({\n    className: className,\n    ref: ref,\n    alignItems: \"flex-start\",\n    spacing: 4\n  }, rest), ranges.map(function (range, index) {\n    var value = range.value,\n      closeOverlay = range.closeOverlay,\n      label = range.label,\n      rest = _objectWithoutPropertiesLoose(range, _excluded2);\n    var disabled = disableShortcut === null || disableShortcut === void 0 ? void 0 : disableShortcut(value);\n    var handleClickShortcut = function handleClickShortcut(event) {\n      if (disabled) {\n        return;\n      }\n      onShortcutClick === null || onShortcutClick === void 0 ? void 0 : onShortcutClick(range, closeOverlay !== false ? true : false, event);\n    };\n    return /*#__PURE__*/React.createElement(Button, _extends({\n      appearance: \"link\",\n      size: \"sm\",\n      key: index,\n      disabled: disabled,\n      onClick: handleClickShortcut\n    }, rest), hasLocaleKey(label) && typeof label === 'string' ? locale === null || locale === void 0 ? void 0 : locale[label] : label);\n  }));\n});\nexport default PredefinedRanges;","map":null,"metadata":{},"sourceType":"module"}