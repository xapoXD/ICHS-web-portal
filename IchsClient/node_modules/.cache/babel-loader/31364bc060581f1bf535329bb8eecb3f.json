{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"value\", \"defaultValue\", \"disabled\", \"onChange\", \"onEdit\", \"onCancel\", \"onSave\", \"onClick\"];\nimport { useState } from 'react';\nimport { useEventCallback, useControlled } from \"../internals/hooks/index.js\";\nvar useEditState = function useEditState(props) {\n  var valueProp = props.value,\n    defaultValue = props.defaultValue,\n    disabled = props.disabled,\n    onChange = props.onChange,\n    onEdit = props.onEdit,\n    onCancel = props.onCancel,\n    onSave = props.onSave,\n    onClick = props.onClick,\n    htmlProps = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useState = useState(false),\n    isEditing = _useState[0],\n    setIsEditing = _useState[1];\n  var _useControlled = useControlled(valueProp, defaultValue),\n    value = _useControlled[0],\n    setValue = _useControlled[1];\n\n  // When editing, the value is not updated, and the original value is restored when canceling\n  var _useState2 = useState(),\n    resetValue = _useState2[0],\n    setResetValue = _useState2[1];\n  var handleClick = useEventCallback(function (event) {\n    if (disabled) {\n      return;\n    }\n    onClick === null || onClick === void 0 ? void 0 : onClick(event);\n    onEdit === null || onEdit === void 0 ? void 0 : onEdit(event);\n    setIsEditing(true);\n    setResetValue(value);\n  });\n  var handleChange = useEventCallback(function (value, event) {\n    setValue(value);\n    onChange === null || onChange === void 0 ? void 0 : onChange(value, event);\n  });\n  var handleCancel = useEventCallback(function (event) {\n    var _event$stopPropagatio;\n    setIsEditing(false);\n    setValue(resetValue);\n    onCancel === null || onCancel === void 0 ? void 0 : onCancel(event);\n    event === null || event === void 0 ? void 0 : (_event$stopPropagatio = event.stopPropagation) === null || _event$stopPropagatio === void 0 ? void 0 : _event$stopPropagatio.call(event);\n  });\n  var handleSave = useEventCallback(function (event) {\n    var _event$stopPropagatio2;\n    setIsEditing(false);\n    onSave === null || onSave === void 0 ? void 0 : onSave(event);\n    event === null || event === void 0 ? void 0 : (_event$stopPropagatio2 = event.stopPropagation) === null || _event$stopPropagatio2 === void 0 ? void 0 : _event$stopPropagatio2.call(event);\n  });\n  var handleKeyDown = useEventCallback(function (event) {\n    var _event$target;\n    if (isEditing) {\n      switch (event.key) {\n        case 'Enter':\n          if (((_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.tagName) === 'INPUT') {\n            handleSave(event);\n          }\n          break;\n        case 'Escape':\n          handleCancel(event);\n          break;\n      }\n    }\n  });\n  return {\n    isEditing: isEditing,\n    value: value,\n    onClick: handleClick,\n    onChange: handleChange,\n    onCancel: handleCancel,\n    onSave: handleSave,\n    onKeyDown: handleKeyDown,\n    htmlProps: htmlProps\n  };\n};\nexport default useEditState;","map":null,"metadata":{},"sourceType":"module"}