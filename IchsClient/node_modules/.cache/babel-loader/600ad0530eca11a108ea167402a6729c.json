{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { PARENT_KEY } from '../constants';\n\n/**\n * Flatten the tree data with parent association recorded on each node\n * @param tree tree data\n */\nfunction flattenData(tree, parent) {\n  return tree.reduce(function (acc, node) {\n    var _extends2;\n\n    // Create a new flattened node with parent association\n    var flattened = _extends({}, node, (_extends2 = {}, _extends2[PARENT_KEY] = parent, _extends2)); // Add the flattened node and its flattened children (if any) to the result array\n\n    acc.push.apply(acc, [flattened].concat(node.children ? flattenData(node.children, flattened) : []));\n    return acc;\n  }, []);\n}\nexport default flattenData;","map":null,"metadata":{},"sourceType":"module"}