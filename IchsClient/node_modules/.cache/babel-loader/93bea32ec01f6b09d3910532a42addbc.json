{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"classPrefix\", \"className\", \"children\", \"collapsible\", \"caretAs\", \"disabled\", \"expanded\", \"role\", \"bodyId\", \"buttonId\", \"onClickButton\"];\nimport React, { isValidElement, cloneElement } from 'react';\nimport get from 'lodash/get';\nimport Heading from \"../Heading/index.js\";\nimport AccordionButton from \"./AccordionButton.js\";\nimport { useClassNames } from \"../internals/hooks/index.js\";\nvar PanelHeader = function PanelHeader(props) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? Heading : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'panel' : _props$classPrefix,\n    className = props.className,\n    children = props.children,\n    collapsible = props.collapsible,\n    caretAs = props.caretAs,\n    disabled = props.disabled,\n    expanded = props.expanded,\n    role = props.role,\n    bodyId = props.bodyId,\n    buttonId = props.buttonId,\n    onClickButton = props.onClickButton,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    merge = _useClassNames.merge,\n    prefix = _useClassNames.prefix;\n  var headerElement;\n  if (! /*#__PURE__*/isValidElement(children) || Array.isArray(children)) {\n    headerElement = /*#__PURE__*/React.createElement(\"span\", {\n      className: prefix('title')\n    }, children);\n  } else {\n    var _className = merge(prefix('title'), get(children, 'props.className'));\n    headerElement = /*#__PURE__*/cloneElement(children, {\n      className: _className\n    });\n  }\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    level: 2,\n    className: merge(className, prefix('header'))\n  }, rest), collapsible ? /*#__PURE__*/React.createElement(AccordionButton, {\n    id: buttonId,\n    role: role,\n    caretAs: caretAs,\n    controlId: bodyId,\n    disabled: disabled,\n    expanded: expanded,\n    onClick: onClickButton\n  }, headerElement) : headerElement);\n};\nexport default PanelHeader;","map":null,"metadata":{},"sourceType":"module"}