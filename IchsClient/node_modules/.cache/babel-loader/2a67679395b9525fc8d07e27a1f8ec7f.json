{"ast":null,"code":"'use client';\n\nimport _flatten from \"lodash/flatten\";\nimport { useCallback, useRef } from 'react';\nvar useManager = function useManager() {\n  var collectionMapRef = useRef({});\n  var listItemRegister = useCallback(function (item) {\n    var collection = item.info.collection;\n    if (!Array.isArray(collectionMapRef.current[collection])) {\n      // reset collection\n      collectionMapRef.current[collection] = [];\n    }\n    collectionMapRef.current[collection].push(item);\n    return {\n      unregister: function unregister() {\n        var index = collectionMapRef.current[collection].indexOf(item);\n        if (index !== -1) {\n          collectionMapRef.current[collection].splice(index, 1);\n        }\n      }\n    };\n  }, []);\n  var getManagedItem = useCallback(function (node) {\n    var allItems = _flatten(Object.values(collectionMapRef.current));\n    return allItems.find(function (managerRef) {\n      return managerRef.node === node;\n    });\n  }, []);\n  var getOrderedItems = useCallback(function (collection) {\n    return collection != null ? [].concat(collectionMapRef.current[collection]).sort(function (nodeInfo1, nodeInfo2) {\n      return Number(nodeInfo1.info.index) - Number(nodeInfo2.info.index);\n    }) : [];\n  }, []);\n  return {\n    listItemRegister: listItemRegister,\n    getManagedItem: getManagedItem,\n    getOrderedItems: getOrderedItems\n  };\n};\nexport default useManager;","map":null,"metadata":{},"sourceType":"module"}