{"ast":null,"code":"'use client';\n\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _templateObject, _templateObject2, _templateObject3;\nvar _excluded = [\"as\", \"classPrefix\", \"title\", \"children\", \"style\", \"visible\", \"className\", \"full\", \"arrow\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from \"../internals/hooks/index.js\";\nimport Heading from \"../Heading/index.js\";\n/**\n * The `Popover` component is used to display a popup window for a target component.\n * @see https://rsuitejs.com/components/popover\n */\nvar Popover = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'popover' : _props$classPrefix,\n    title = props.title,\n    children = props.children,\n    style = props.style,\n    visible = props.visible,\n    className = props.className,\n    full = props.full,\n    _props$arrow = props.arrow,\n    arrow = _props$arrow === void 0 ? true : _props$arrow,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge,\n    prefix = _useClassNames.prefix;\n  var classes = merge(className, withClassPrefix({\n    full: full\n  }));\n  var styles = _extends({\n    display: 'block',\n    opacity: visible ? 1 : undefined\n  }, style);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"dialog\"\n  }, rest, {\n    ref: ref,\n    className: classes,\n    style: styles\n  }), arrow && /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"arrow\"]))),\n    \"aria-hidden\": true\n  }), title && /*#__PURE__*/React.createElement(Heading, {\n    level: 3,\n    className: prefix(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"title\"])))\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"content\"])))\n  }, children));\n});\nPopover.displayName = 'Popover';\nPopover.propTypes = {\n  as: PropTypes.elementType,\n  classPrefix: PropTypes.string,\n  children: PropTypes.node,\n  title: PropTypes.node,\n  style: PropTypes.object,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  full: PropTypes.bool,\n  arrow: PropTypes.bool\n};\nexport default Popover;","map":null,"metadata":{},"sourceType":"module"}