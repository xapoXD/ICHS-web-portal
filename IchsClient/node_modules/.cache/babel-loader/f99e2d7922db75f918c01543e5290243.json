{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _templateObject;\nvar _excluded = [\"as\", \"className\", \"rows\", \"rowHeight\", \"rowMargin\", \"rowSpacing\", \"graph\", \"active\", \"classPrefix\"];\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from \"../internals/hooks/index.js\";\nimport { oneOf } from \"../internals/propTypes/index.js\";\n/**\n * The `Placeholder.Paragraph` component is used to display the loading state of the block.\n * @see https://rsuitejs.com/components/placeholder\n */\nvar PlaceholderParagraph = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    className = props.className,\n    _props$rows = props.rows,\n    rows = _props$rows === void 0 ? 2 : _props$rows,\n    _props$rowHeight = props.rowHeight,\n    rowHeight = _props$rowHeight === void 0 ? 10 : _props$rowHeight,\n    _props$rowMargin = props.rowMargin,\n    rowMargin = _props$rowMargin === void 0 ? 20 : _props$rowMargin,\n    _props$rowSpacing = props.rowSpacing,\n    rowSpacing = _props$rowSpacing === void 0 ? rowMargin : _props$rowSpacing,\n    graph = props.graph,\n    active = props.active,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'placeholder' : _props$classPrefix,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    merge = _useClassNames.merge,\n    prefix = _useClassNames.prefix,\n    withClassPrefix = _useClassNames.withClassPrefix;\n  var graphShape = graph === true ? 'square' : graph;\n  var rowElements = useMemo(function () {\n    var rowArr = [];\n    for (var i = 0; i < rows; i++) {\n      var styles = {\n        height: rowHeight,\n        marginTop: i > 0 ? rowSpacing : Number(rowSpacing) / 2\n      };\n      rowArr.push( /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        style: styles,\n        className: prefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"row\"])))\n      }));\n    }\n    return rowArr;\n  }, [prefix, rowHeight, rowSpacing, rows]);\n  var classes = merge(className, withClassPrefix('paragraph', {\n    active: active\n  }));\n  var graphClasses = prefix('paragraph-graph', \"paragraph-graph-\" + graphShape);\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }), graphShape && /*#__PURE__*/React.createElement(\"div\", {\n    className: graphClasses\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix('paragraph-graph-inner')\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('paragraph-group')\n  }, rowElements));\n});\nPlaceholderParagraph.displayName = 'PlaceholderParagraph';\nPlaceholderParagraph.propTypes = {\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  rows: PropTypes.number,\n  rowHeight: PropTypes.number,\n  rowSpacing: PropTypes.number,\n  graph: PropTypes.oneOfType([PropTypes.bool, oneOf(['circle', 'square', 'image'])]),\n  active: PropTypes.bool\n};\nexport default PlaceholderParagraph;","map":null,"metadata":{},"sourceType":"module"}