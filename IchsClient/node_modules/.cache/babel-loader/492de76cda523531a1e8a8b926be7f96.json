{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"children\", \"className\", \"classPrefix\", \"collection\", \"disabled\", \"index\", \"size\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useContext, useEffect, useRef } from 'react';\nimport { useClassNames } from \"../internals/hooks/index.js\";\nimport { mergeRefs } from \"../internals/utils/index.js\";\nimport ListContext from \"./ListContext.js\";\n/**\n * The `List.Item` component is used to specify the layout of the list item.\n * @see https://rsuitejs.com/components/list\n */\nvar ListItem = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    children = props.children,\n    className = props.className,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'list-item' : _props$classPrefix,\n    _props$collection = props.collection,\n    collection = _props$collection === void 0 ? 0 : _props$collection,\n    disabled = props.disabled,\n    index = props.index,\n    sizeProp = props.size,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useContext = useContext(ListContext),\n    bordered = _useContext.bordered,\n    register = _useContext.register,\n    parentSize = _useContext.size;\n  var size = sizeProp || parentSize;\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge;\n  var listItemRef = useRef(null);\n  useEffect(function () {\n    if (listItemRef.current) {\n      var _register = register({\n          node: listItemRef.current,\n          edgeOffset: null,\n          info: {\n            collection: collection,\n            disabled: disabled,\n            index: index\n          }\n        }),\n        unregister = _register.unregister;\n      return unregister;\n    }\n  }, [collection, disabled, index, register]);\n  var classes = merge(className, withClassPrefix(size, {\n    disabled: disabled,\n    bordered: bordered\n  }));\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"listitem\",\n    \"aria-disabled\": disabled\n  }, rest, {\n    ref: mergeRefs(listItemRef, ref),\n    className: classes\n  }), children);\n});\nListItem.displayName = 'ListItem';\nListItem.propTypes = {\n  index: PropTypes.number,\n  collection: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  disabled: PropTypes.bool,\n  children: PropTypes.node\n};\nexport default ListItem;","map":null,"metadata":{},"sourceType":"module"}