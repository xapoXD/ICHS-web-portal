{"ast":null,"code":"'use client';\n\nimport { useRef } from 'react';\nimport { contains, ownerDocument } from 'dom-lib';\nimport { useIsomorphicLayoutEffect, useUpdateEffect, useEventCallback } from \"../internals/hooks/index.js\";\nimport { RSUITE_PICKER_TYPE } from \"../internals/symbols.js\";\nvar useFocusEvent = function useFocusEvent(_ref) {\n  var _ref$current;\n  var isEditing = _ref.isEditing,\n    stateOnBlur = _ref.stateOnBlur,\n    onSave = _ref.onSave,\n    onCancel = _ref.onCancel;\n  var ref = useRef(null);\n  var rootRef = useRef(null);\n  var isPicker = ((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.type) === RSUITE_PICKER_TYPE;\n  var focus = function focus() {\n    if (isPicker) {\n      setTimeout(function () {\n        var _ref$current2, _ref$current2$target, _ref$current2$target$;\n        (_ref$current2 = ref.current) === null || _ref$current2 === void 0 ? void 0 : (_ref$current2$target = _ref$current2.target) === null || _ref$current2$target === void 0 ? void 0 : (_ref$current2$target$ = _ref$current2$target.focus) === null || _ref$current2$target$ === void 0 ? void 0 : _ref$current2$target$.call(_ref$current2$target);\n      }, 100);\n    } else {\n      var _ref$current3, _ref$current3$focus;\n      (_ref$current3 = ref.current) === null || _ref$current3 === void 0 ? void 0 : (_ref$current3$focus = _ref$current3.focus) === null || _ref$current3$focus === void 0 ? void 0 : _ref$current3$focus.call(_ref$current3);\n    }\n  };\n  var handleBlur = useEventCallback(function (event) {\n    if (event) {\n      var _event$relatedTarget;\n      var relatedTarget = (_event$relatedTarget = event.relatedTarget) !== null && _event$relatedTarget !== void 0 ? _event$relatedTarget : ownerDocument(event.currentTarget).activeElement;\n      if (rootRef.current && contains(rootRef.current, relatedTarget)) {\n        return;\n      }\n    }\n    if (stateOnBlur === 'save') {\n      onSave === null || onSave === void 0 ? void 0 : onSave(event);\n    } else if (stateOnBlur === 'cancel') {\n      onCancel === null || onCancel === void 0 ? void 0 : onCancel(event);\n    }\n  });\n  useIsomorphicLayoutEffect(function () {\n    if (isEditing) {\n      focus();\n    }\n  }, []);\n  useUpdateEffect(function () {\n    if (isEditing) {\n      focus();\n    }\n  }, [isEditing]);\n  return {\n    target: ref,\n    root: rootRef,\n    onBlur: handleBlur\n  };\n};\nexport default useFocusEvent;","map":null,"metadata":{},"sourceType":"module"}