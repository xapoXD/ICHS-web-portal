{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport trim from 'lodash/trim';\nimport { KEY_VALUES } from \"../constants/index.js\";\nimport { findNodeOfTree } from \"../Tree/utils/index.js\";\nimport { reactToString } from \"../utils/index.js\";\nvar defaultNodeKeys = {\n  valueKey: 'value',\n  childrenKey: 'children'\n};\nexport function createConcatChildrenFunction(node, nodeValue, nodeKeys) {\n  if (nodeKeys === void 0) {\n    nodeKeys = defaultNodeKeys;\n  }\n  var _nodeKeys = nodeKeys,\n    valueKey = _nodeKeys.valueKey,\n    childrenKey = _nodeKeys.childrenKey;\n  return function (data, children) {\n    if (nodeValue) {\n      node = findNodeOfTree(data, function (item) {\n        return nodeValue === item[valueKey];\n      });\n    }\n    node[childrenKey] = children;\n    return data.concat([]);\n  };\n}\nexport function shouldDisplay(label, searchKeyword) {\n  if (!trim(searchKeyword)) {\n    return true;\n  }\n  var keyword = searchKeyword.toLocaleLowerCase();\n  if (typeof label === 'string' || typeof label === 'number') {\n    return (\"\" + label).toLocaleLowerCase().indexOf(keyword) >= 0;\n  } else if ( /*#__PURE__*/React.isValidElement(label)) {\n    var nodes = reactToString(label);\n    return nodes.join('').toLocaleLowerCase().indexOf(keyword) >= 0;\n  }\n  return false;\n}\n/**\n * Handling keyboard events...\n * @param event Keyboard event object\n * @param events Event callback functions\n */\nexport function onMenuKeyDown(event, events) {\n  var down = events.down,\n    up = events.up,\n    enter = events.enter,\n    del = events.del,\n    esc = events.esc,\n    right = events.right,\n    left = events.left;\n  switch (event.key) {\n    // down\n    case KEY_VALUES.DOWN:\n      down === null || down === void 0 ? void 0 : down(event);\n      event.preventDefault();\n      break;\n    // up\n    case KEY_VALUES.UP:\n      up === null || up === void 0 ? void 0 : up(event);\n      event.preventDefault();\n      break;\n    // enter\n    case KEY_VALUES.ENTER:\n      enter === null || enter === void 0 ? void 0 : enter(event);\n      event.preventDefault();\n      break;\n    // delete\n    case KEY_VALUES.BACKSPACE:\n      del === null || del === void 0 ? void 0 : del(event);\n      break;\n    // esc | tab\n    case KEY_VALUES.ESC:\n    case KEY_VALUES.TAB:\n      esc === null || esc === void 0 ? void 0 : esc(event);\n      break;\n    // left arrow\n    case KEY_VALUES.LEFT:\n      left === null || left === void 0 ? void 0 : left(event);\n      break;\n    // right arrow\n    case KEY_VALUES.RIGHT:\n      right === null || right === void 0 ? void 0 : right(event);\n      break;\n    default:\n  }\n}","map":null,"metadata":{},"sourceType":"module"}