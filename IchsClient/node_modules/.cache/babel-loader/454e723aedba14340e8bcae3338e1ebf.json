{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"calendarDate\", \"format\", \"disabledDate\", \"index\", \"limitEndYear\", \"limitStartYear\", \"onChangeCalendarMonth\", \"onChangeCalendarTime\", \"onToggleMeridian\", \"onSelect\", \"value\"];\nimport React from 'react';\nimport { addMonths } from \"../internals/utils/date/index.js\";\nimport { DATERANGE_DISABLED_TARGET } from \"../internals/constants/index.js\";\nimport { useEventCallback } from \"../internals/hooks/index.js\";\nimport CalendarCore from \"../Calendar/CalendarContainer.js\";\nvar Calendar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? CalendarCore : _props$as,\n    _props$calendarDate = props.calendarDate,\n    calendarDate = _props$calendarDate === void 0 ? [new Date(), addMonths(new Date(), 1)] : _props$calendarDate,\n    _props$format = props.format,\n    format = _props$format === void 0 ? 'yyyy-MM-dd' : _props$format,\n    disabledDate = props.disabledDate,\n    _props$index = props.index,\n    index = _props$index === void 0 ? 0 : _props$index,\n    limitEndYear = props.limitEndYear,\n    limitStartYear = props.limitStartYear,\n    onChangeCalendarMonth = props.onChangeCalendarMonth,\n    onChangeCalendarTime = props.onChangeCalendarTime,\n    onToggleMeridian = props.onToggleMeridian,\n    onSelect = props.onSelect,\n    _props$value = props.value,\n    value = _props$value === void 0 ? [] : _props$value,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var onMoveForward = useEventCallback(function (nextPageDate) {\n    onChangeCalendarMonth === null || onChangeCalendarMonth === void 0 ? void 0 : onChangeCalendarMonth(index, nextPageDate);\n  });\n  var onMoveBackward = useEventCallback(function (nextPageDate) {\n    onChangeCalendarMonth === null || onChangeCalendarMonth === void 0 ? void 0 : onChangeCalendarMonth(index, nextPageDate);\n  });\n  var handleSelect = useEventCallback(function (date, event) {\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(index, date, event);\n  });\n  var handleChangeMonth = useEventCallback(function (nextPageDate) {\n    onChangeCalendarMonth === null || onChangeCalendarMonth === void 0 ? void 0 : onChangeCalendarMonth(index, nextPageDate);\n  });\n  var handleChangeTime = useEventCallback(function (nextPageDate) {\n    onChangeCalendarTime === null || onChangeCalendarTime === void 0 ? void 0 : onChangeCalendarTime(index, nextPageDate);\n  });\n  var handleToggleMeridian = useEventCallback(function (event) {\n    onToggleMeridian(index, event);\n  });\n  var getCalendarDate = function getCalendarDate() {\n    return calendarDate[index];\n  };\n  var handleMoveForward = useEventCallback(function () {\n    onMoveForward === null || onMoveForward === void 0 ? void 0 : onMoveForward(addMonths(getCalendarDate(), 1));\n  });\n  var handleMoveBackward = useEventCallback(function () {\n    onMoveBackward === null || onMoveBackward === void 0 ? void 0 : onMoveBackward(addMonths(getCalendarDate(), -1));\n  });\n  var disabledMonth = function disabledMonth(date) {\n    return disabledDate === null || disabledDate === void 0 ? void 0 : disabledDate(date, value, DATERANGE_DISABLED_TARGET.CALENDAR);\n  };\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    \"data-testid\": \"calendar-\" + (index === 0 ? 'start' : 'end')\n  }, rest, {\n    format: format,\n    dateRange: value,\n    disabledDate: disabledMonth,\n    index: index,\n    limitEndYear: limitEndYear,\n    limitStartYear: limitStartYear,\n    onChangeMonth: handleChangeMonth,\n    onChangeTime: handleChangeTime,\n    onMoveBackward: handleMoveBackward,\n    onMoveForward: handleMoveForward,\n    onToggleMeridian: handleToggleMeridian,\n    onSelect: handleSelect,\n    calendarDate: getCalendarDate(),\n    ref: ref\n  }));\n});\nCalendar.displayName = 'DateRangePicker.Calendar';\nexport default Calendar;","map":null,"metadata":{},"sourceType":"module"}