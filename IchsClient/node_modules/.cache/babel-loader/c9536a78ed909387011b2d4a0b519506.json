{"ast":null,"code":"'use client';\n\nvar emptyArray = [];\nvar strCaretTrap = '[]';\nexport var defaultPlaceholderChar = '_';\nexport function convertMaskToPlaceholder(mask, placeholderChar) {\n  if (mask === void 0) {\n    mask = emptyArray;\n  }\n  if (placeholderChar === void 0) {\n    placeholderChar = defaultPlaceholderChar;\n  }\n  if (!Array.isArray(mask)) {\n    throw new Error('Text-mask:convertMaskToPlaceholder; The mask property must be an array.');\n  }\n  if (mask.indexOf(placeholderChar) !== -1) {\n    throw new Error('Placeholder character must not be used as part of the mask. Please specify a character ' + 'that is not present in your mask as your placeholder character.\\n\\n' + (\"The placeholder character that was received is: \" + JSON.stringify(placeholderChar) + \"\\n\\n\") + (\"The mask that was received is: \" + JSON.stringify(mask)));\n  }\n  return mask.map(function (char) {\n    return char instanceof RegExp ? placeholderChar : char;\n  }).join('');\n}\nexport function processCaretTraps(mask) {\n  var indexes = [];\n  var indexOfCaretTrap;\n  while (indexOfCaretTrap = mask.indexOf(strCaretTrap), indexOfCaretTrap !== -1) {\n    indexes.push(indexOfCaretTrap);\n    mask.splice(indexOfCaretTrap, 1);\n  }\n  return {\n    maskWithoutCaretTraps: mask,\n    indexes: indexes\n  };\n}","map":null,"metadata":{},"sourceType":"module"}