{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"name\", \"classPrefix\", \"className\", \"placement\", \"appearance\", \"cleanable\", \"block\", \"disabled\", \"countable\", \"readOnly\", \"plaintext\", \"hasValue\"];\nimport kebabCase from 'lodash/kebabCase';\nimport omit from 'lodash/omit';\nimport { useClassNames } from \"../../hooks/index.js\";\nimport { placementPolyfill } from \"../../utils/index.js\";\n/**\n * The className of the assembled Toggle is on the Picker.\n */\nfunction usePickerClassName(props) {\n  var _withClassPrefix;\n  var name = props.name,\n    classPrefix = props.classPrefix,\n    className = props.className,\n    placement = props.placement,\n    appearance = props.appearance,\n    cleanable = props.cleanable,\n    block = props.block,\n    disabled = props.disabled,\n    countable = props.countable,\n    readOnly = props.readOnly,\n    plaintext = props.plaintext,\n    hasValue = props.hasValue,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge;\n  var classes = merge(className, withClassPrefix(name, appearance, 'toggle-wrapper', (_withClassPrefix = {}, _withClassPrefix[\"placement-\" + kebabCase(placementPolyfill(placement))] = placement, _withClassPrefix['read-only'] = readOnly, _withClassPrefix['has-value'] = hasValue, _withClassPrefix.cleanable = cleanable, _withClassPrefix.block = block, _withClassPrefix.disabled = disabled, _withClassPrefix.countable = countable, _withClassPrefix.plaintext = plaintext, _withClassPrefix)));\n\n  // Those props that're used for composing the className\n  var usedClassNamePropKeys = Object.keys(omit(props, [].concat(Object.keys(rest || {}), ['disabled', 'readOnly', 'plaintext', 'name'])));\n  return [classes, usedClassNamePropKeys];\n}\nexport default usePickerClassName;","map":null,"metadata":{},"sourceType":"module"}