{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"classPrefix\", \"className\", \"children\"];\nimport React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from \"../internals/hooks/index.js\";\nexport var ContainerContext = /*#__PURE__*/React.createContext({});\n/**\n * The Container component is used to wrap content in a themed container with a max-width.\n * @see https://rsuitejs.com/components/container\n */\nvar Container = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'section' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'container' : _props$classPrefix,\n    className = props.className,\n    children = props.children,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useState = useState(false),\n    hasSidebar = _useState[0],\n    setHasSidebar = _useState[1];\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge;\n  var classes = merge(className, withClassPrefix({\n    'has-sidebar': hasSidebar\n  }));\n  var contextValue = useMemo(function () {\n    return {\n      setHasSidebar: setHasSidebar\n    };\n  }, [setHasSidebar]);\n  return /*#__PURE__*/React.createElement(ContainerContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }), children));\n});\nContainer.displayName = 'Container';\nContainer.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  classPrefix: PropTypes.string\n};\nexport default Container;","map":null,"metadata":{},"sourceType":"module"}