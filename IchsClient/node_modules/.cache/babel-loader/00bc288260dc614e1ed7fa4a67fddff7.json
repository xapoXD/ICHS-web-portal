{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"classPrefix\", \"className\", \"role\"];\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { ModalContext } from \"./ModalContext.js\";\nimport { useClassNames } from \"../internals/hooks/index.js\";\nvar ModalTitle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'h4' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'modal-title' : _props$classPrefix,\n    className = props.className,\n    role = props.role,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge;\n  var classes = merge(className, withClassPrefix());\n  var context = useContext(ModalContext);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    id: context ? context.dialogId + \"-title\" : undefined\n  }, rest, {\n    role: role,\n    ref: ref,\n    className: classes\n  }));\n});\nModalTitle.displayName = 'Modal.Title';\nModalTitle.propTypes = {\n  as: PropTypes.elementType,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.node\n};\nexport default ModalTitle;","map":null,"metadata":{},"sourceType":"module"}