{"ast":null,"code":"'use client';\n\nimport pick from 'lodash/pick';\nimport getHours from 'date-fns/getHours';\nimport getMinutes from 'date-fns/getMinutes';\nimport getSeconds from 'date-fns/getSeconds';\nimport { TimeProp } from \"./types.js\";\nvar HOURS_PATTERN = /(Hours?)/;\nvar MINUTES_PATTERN = /(Minutes?)/;\nvar SECONDS_PATTERN = /(Seconds?)/;\n\n/**\n * Verify that the time is valid.\n *\n * @param props - The calendar props.\n * @param date - The date to check.\n * @returns Whether the time is disabled.\n */\nexport function disableTime(props, date) {\n  if (!date) {\n    return false;\n  }\n  var disabledTimeProps = [TimeProp.DisabledHours, TimeProp.DisabledMinutes, TimeProp.DisabledSeconds, TimeProp.ShouldDisableHour, TimeProp.ShouldDisableMinute, TimeProp.ShouldDisableSecond];\n  var calendarProps = pick(props, disabledTimeProps);\n  var mapProps = new Map(Object.entries(calendarProps));\n  return Array.from(mapProps.keys()).some(function (key) {\n    if (HOURS_PATTERN.test(key)) {\n      var _mapProps$get;\n      return (_mapProps$get = mapProps.get(key)) === null || _mapProps$get === void 0 ? void 0 : _mapProps$get(getHours(date), date);\n    }\n    if (MINUTES_PATTERN.test(key)) {\n      var _mapProps$get2;\n      return (_mapProps$get2 = mapProps.get(key)) === null || _mapProps$get2 === void 0 ? void 0 : _mapProps$get2(getMinutes(date), date);\n    }\n    if (SECONDS_PATTERN.test(key)) {\n      var _mapProps$get3;\n      return (_mapProps$get3 = mapProps.get(key)) === null || _mapProps$get3 === void 0 ? void 0 : _mapProps$get3(getSeconds(date), date);\n    }\n    return false;\n  });\n}\nexport default disableTime;","map":null,"metadata":{},"sourceType":"module"}