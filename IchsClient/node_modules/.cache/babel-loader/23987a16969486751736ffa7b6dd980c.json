{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useCallback, useMemo } from 'react';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport { nameToPath } from \"../utils.js\";\nfunction useField(props) {\n  var name = props.name,\n    formValue = props.formValue,\n    formError = props.formError,\n    value = props.value,\n    nestedField = props.nestedField,\n    errorMessage = props.errorMessage,\n    errorFromContext = props.errorFromContext;\n  var fieldValue = useMemo(function () {\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n    return nestedField ? get(formValue, name) : formValue === null || formValue === void 0 ? void 0 : formValue[name];\n  }, [formValue, name, nestedField, value]);\n  var fieldError = useMemo(function () {\n    if (typeof errorMessage !== 'undefined' || !errorFromContext) {\n      return errorMessage;\n    }\n    if (nestedField) {\n      var _get;\n      return (_get = get(formError, nameToPath(name))) === null || _get === void 0 ? void 0 : _get.errorMessage;\n    }\n    var fieldError = formError === null || formError === void 0 ? void 0 : formError[name];\n    if (typeof fieldError === 'string') {\n      return fieldError;\n    }\n    return fieldError === null || fieldError === void 0 ? void 0 : fieldError.errorMessage;\n  }, [errorFromContext, errorMessage, formError, name, nestedField]);\n  var setFieldValue = useCallback(function (fieldName, fieldValue) {\n    var _extends2;\n    if (nestedField) {\n      return set(_extends({}, formValue), fieldName, fieldValue);\n    }\n    return _extends({}, formValue, (_extends2 = {}, _extends2[fieldName] = fieldValue, _extends2));\n  }, [formValue, nestedField]);\n  return {\n    fieldValue: fieldValue,\n    fieldError: fieldError,\n    setFieldValue: setFieldValue\n  };\n}\nexport default useField;","map":null,"metadata":{},"sourceType":"module"}