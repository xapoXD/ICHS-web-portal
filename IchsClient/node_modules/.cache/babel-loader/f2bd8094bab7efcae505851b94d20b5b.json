{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"classPrefix\", \"width\", \"dataKey\", \"headerHeight\", \"children\", \"left\", \"sortable\", \"sortColumn\", \"sortType\", \"groupHeader\", \"resizable\", \"fixed\", \"minWidth\", \"index\", \"flexGrow\", \"align\", \"verticalAlign\", \"onColumnResizeEnd\", \"onResize\", \"onColumnResizeStart\", \"onColumnResizeMove\", \"onSortColumn\", \"renderSortIcon\"];\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport isNil from 'lodash/isNil';\nimport Sort from '@rsuite/icons/Sort';\nimport SortUp from '@rsuite/icons/SortUp';\nimport SortDown from '@rsuite/icons/SortDown';\nimport ColumnResizeHandler from './ColumnResizeHandler';\nimport { useUpdateEffect, useClassNames } from './utils';\nimport Cell from './Cell';\nvar SORTED_ICON = {\n  desc: SortDown,\n  asc: SortUp\n};\nvar HeaderCell = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var className = props.className,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'cell-header' : _props$classPrefix,\n    width = props.width,\n    dataKey = props.dataKey,\n    headerHeight = props.headerHeight,\n    children = props.children,\n    left = props.left,\n    sortable = props.sortable,\n    sortColumn = props.sortColumn,\n    sortType = props.sortType,\n    groupHeader = props.groupHeader,\n    resizable = props.resizable,\n    fixed = props.fixed,\n    minWidth = props.minWidth,\n    index = props.index,\n    flexGrow = props.flexGrow,\n    align = props.align,\n    verticalAlign = props.verticalAlign,\n    onColumnResizeEnd = props.onColumnResizeEnd,\n    onResize = props.onResize,\n    onColumnResizeStart = props.onColumnResizeStart,\n    onColumnResizeMove = props.onColumnResizeMove,\n    onSortColumn = props.onSortColumn,\n    renderSortIcon = props.renderSortIcon,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useState = useState(isNil(flexGrow) ? width : 0),\n    columnWidth = _useState[0],\n    setColumnWidth = _useState[1];\n  useUpdateEffect(function () {\n    setColumnWidth(isNil(flexGrow) ? width : 0);\n  }, [flexGrow, width]);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge,\n    prefix = _useClassNames.prefix;\n  var classes = merge(className, withClassPrefix({\n    sortable: sortable\n  }));\n  var ariaSort;\n  if (sortColumn === dataKey) {\n    ariaSort = 'other';\n    if (sortType === 'asc') {\n      ariaSort = 'ascending';\n    } else if (sortType === 'desc') {\n      ariaSort = 'descending';\n    }\n  }\n  var handleClick = useCallback(function () {\n    if (sortable) {\n      onSortColumn === null || onSortColumn === void 0 ? void 0 : onSortColumn(dataKey);\n    }\n  }, [dataKey, onSortColumn, sortable]);\n  var handleColumnResizeStart = useCallback(function () {\n    onColumnResizeStart === null || onColumnResizeStart === void 0 ? void 0 : onColumnResizeStart(columnWidth, left, !!fixed);\n  }, [columnWidth, fixed, left, onColumnResizeStart]);\n  var handleColumnResizeEnd = useCallback(function (nextColumnWidth, cursorDelta) {\n    setColumnWidth(nextColumnWidth);\n    onColumnResizeEnd === null || onColumnResizeEnd === void 0 ? void 0 : onColumnResizeEnd(nextColumnWidth, cursorDelta, dataKey, index);\n    onResize === null || onResize === void 0 ? void 0 : onResize(nextColumnWidth, dataKey);\n  }, [dataKey, index, onColumnResizeEnd, onResize]);\n  var renderSortColumn = function renderSortColumn() {\n    if (sortable && !groupHeader) {\n      var _classNames;\n      var SortIcon = sortColumn === dataKey && sortType ? SORTED_ICON[sortType] : Sort;\n      var iconClasses = classNames(prefix('icon-sort'), (_classNames = {}, _classNames[prefix(\"icon-sort-\" + sortType)] = sortColumn === dataKey, _classNames));\n      var sortIcon = renderSortIcon ? renderSortIcon(sortColumn === dataKey ? sortType : undefined) : /*#__PURE__*/React.createElement(SortIcon, {\n        className: iconClasses\n      });\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: prefix('sort-wrapper')\n      }, sortIcon);\n    }\n    return null;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: classes\n  }, /*#__PURE__*/React.createElement(Cell, _extends({\n    \"aria-sort\": ariaSort\n  }, rest, {\n    width: width,\n    dataKey: dataKey,\n    left: left,\n    headerHeight: headerHeight,\n    isHeaderCell: true,\n    align: !groupHeader ? align : undefined,\n    verticalAlign: !groupHeader ? verticalAlign : undefined,\n    onClick: !groupHeader ? handleClick : undefined\n  }), children, renderSortColumn()), resizable ? /*#__PURE__*/React.createElement(ColumnResizeHandler, {\n    defaultColumnWidth: columnWidth,\n    key: columnWidth,\n    columnLeft: left,\n    columnFixed: fixed,\n    height: headerHeight ? headerHeight - 1 : undefined,\n    minWidth: minWidth,\n    onColumnResizeMove: onColumnResizeMove,\n    onColumnResizeStart: handleColumnResizeStart,\n    onColumnResizeEnd: handleColumnResizeEnd\n  }) : null);\n});\nHeaderCell.displayName = 'HeaderCell';\nHeaderCell.propTypes = {\n  index: PropTypes.number,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.oneOf(['desc', 'asc']),\n  sortable: PropTypes.bool,\n  resizable: PropTypes.bool,\n  minWidth: PropTypes.number,\n  onColumnResizeStart: PropTypes.func,\n  onColumnResizeEnd: PropTypes.func,\n  onResize: PropTypes.func,\n  onColumnResizeMove: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  flexGrow: PropTypes.number,\n  fixed: PropTypes.any,\n  children: PropTypes.node,\n  renderSortIcon: PropTypes.func\n};\nexport default HeaderCell;","map":null,"metadata":{},"sourceType":"module"}