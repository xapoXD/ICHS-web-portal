{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"classPrefix\", \"className\", \"children\", \"localeKey\", \"placeholder\"];\nimport React from 'react';\nimport { useClassNames, useCustom } from \"../hooks/index.js\";\n/**\n * Make the component display in plain text, and display default characters when there is no children.\n * @private\n */\nvar Plaintext = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useCustom = useCustom('Plaintext'),\n    locale = _useCustom.locale;\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'plaintext' : _props$classPrefix,\n    className = props.className,\n    children = props.children,\n    _props$localeKey = props.localeKey,\n    localeKey = _props$localeKey === void 0 ? '' : _props$localeKey,\n    _props$placeholder = props.placeholder,\n    placeholder = _props$placeholder === void 0 ? locale[localeKey] : _props$placeholder,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge;\n  var classes = merge(className, withClassPrefix({\n    empty: !children\n  }));\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"text\"\n  }, rest, {\n    ref: ref,\n    className: classes\n  }), children ? children : placeholder);\n});\nPlaintext.displayName = 'Plaintext';\nexport default Plaintext;","map":null,"metadata":{},"sourceType":"module"}