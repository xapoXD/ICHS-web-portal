{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"className\", \"classPrefix\"];\nimport React from 'react';\nimport { getWeekStartDates, setDate } from \"../internals/utils/date/index.js\";\nimport { useClassNames, useCustom } from \"../internals/hooks/index.js\";\nimport Table from \"./Table.js\";\nimport { useCalendarContext } from \"./CalendarContext.js\";\nvar CalendarBody = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    className = props.className,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'calendar-body' : _props$classPrefix,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useCalendarContext = useCalendarContext(),\n    _useCalendarContext$d = _useCalendarContext.date,\n    date = _useCalendarContext$d === void 0 ? new Date() : _useCalendarContext$d,\n    isoWeek = _useCalendarContext.isoWeek,\n    overrideLocale = _useCalendarContext.locale,\n    weekStart = _useCalendarContext.weekStart;\n  var _useCustom = useCustom('Calendar', overrideLocale),\n    locale = _useCustom.locale,\n    formatDate = _useCustom.formatDate;\n  var thisMonthDate = setDate(date, 1);\n  var _useClassNames = useClassNames(classPrefix),\n    merge = _useClassNames.merge,\n    withClassPrefix = _useClassNames.withClassPrefix;\n  var classes = merge(className, withClassPrefix());\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }), /*#__PURE__*/React.createElement(Table, {\n    rows: getWeekStartDates(thisMonthDate, {\n      isoWeek: isoWeek,\n      weekStart: weekStart,\n      locale: locale === null || locale === void 0 ? void 0 : locale.dateLocale\n    }),\n    \"aria-label\": formatDate(thisMonthDate, locale.formattedMonthPattern)\n  }));\n});\nCalendarBody.displayName = 'CalendarBody';\nexport default CalendarBody;","map":null,"metadata":{},"sourceType":"module"}