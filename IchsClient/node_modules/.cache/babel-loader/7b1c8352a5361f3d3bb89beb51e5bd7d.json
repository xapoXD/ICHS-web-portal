{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"classPrefix\", \"className\", \"disabled\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from \"../internals/hooks/index.js\";\n/**\n * The `InputGroup.Addon` component is used to specify an input field with an add-on.\n * @see https://rsuitejs.com/components/input/#input-group\n */\nvar InputGroupAddon = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'span' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'input-group-addon' : _props$classPrefix,\n    className = props.className,\n    disabled = props.disabled,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge;\n  var classes = merge(className, withClassPrefix({\n    disabled: disabled\n  }));\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }));\n});\nInputGroupAddon.displayName = 'InputGroupAddon';\nInputGroupAddon.propTypes = {\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  disabled: PropTypes.bool\n};\nexport default InputGroupAddon;","map":null,"metadata":{},"sourceType":"module"}