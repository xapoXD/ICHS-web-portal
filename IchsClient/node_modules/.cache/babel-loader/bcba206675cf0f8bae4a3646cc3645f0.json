{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nimport slice from 'lodash/slice';\nimport { UNSAFE_flattenTree } from \"../../Tree/utils/index.js\";\n/**\n * A hook for column data\n * @param flattenData\n */\nfunction useColumnData(flattenData) {\n  // The columns displayed in the cascading panel.\n  var _useState = useState([flattenData.filter(function (item) {\n      return !item.parent;\n    })]),\n    columnData = _useState[0],\n    setColumnData = _useState[1];\n\n  /**\n   * Add a list of options to the cascading panel. Used for lazy loading options.\n   * @param column\n   * @param index The index of the current column.\n   */\n  function addColumn(column, index) {\n    setColumnData([].concat(slice(columnData, 0, index), [column]));\n  }\n\n  /**\n   * Remove subsequent columns of the specified column\n   * @param index\n   */\n  function removeColumnByIndex(index) {\n    setColumnData([].concat(slice(columnData, 0, index)));\n  }\n  function enforceUpdateColumnData(nextData) {\n    var nextFlattenData = UNSAFE_flattenTree(nextData);\n    setColumnData([nextFlattenData.filter(function (item) {\n      return !item.parent;\n    })]);\n  }\n  return {\n    columnData: columnData,\n    addColumn: addColumn,\n    removeColumnByIndex: removeColumnByIndex,\n    setColumnData: setColumnData,\n    enforceUpdateColumnData: enforceUpdateColumnData\n  };\n}\nexport default useColumnData;","map":null,"metadata":{},"sourceType":"module"}