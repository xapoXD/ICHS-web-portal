{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _templateObject;\nvar _excluded = [\"as\", \"role\", \"classPrefix\", \"active\", \"children\", \"className\", \"disabled\", \"focus\", \"value\", \"onKeyDown\", \"onSelect\", \"renderItem\"];\nimport React from 'react';\nimport { useClassNames, useEventCallback } from \"../hooks/index.js\";\nimport useCombobox from \"./hooks/useCombobox.js\";\nvar ListItem = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$role = props.role,\n    role = _props$role === void 0 ? 'option' : _props$role,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'dropdown-menu-item' : _props$classPrefix,\n    active = props.active,\n    children = props.children,\n    className = props.className,\n    disabled = props.disabled,\n    focus = props.focus,\n    value = props.value,\n    onKeyDown = props.onKeyDown,\n    onSelect = props.onSelect,\n    renderItem = props.renderItem,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useCombobox = useCombobox(),\n    id = _useCombobox.id;\n  var handleClick = useEventCallback(function (event) {\n    event.preventDefault();\n    if (!disabled) {\n      onSelect === null || onSelect === void 0 ? void 0 : onSelect(value, event);\n    }\n  });\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge,\n    rootPrefix = _useClassNames.rootPrefix;\n  var classes = withClassPrefix({\n    active: active,\n    focus: focus,\n    disabled: disabled\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: role,\n    \"aria-selected\": active,\n    \"aria-disabled\": disabled,\n    id: id ? id + \"-opt-\" + value : undefined,\n    \"data-key\": value\n  }, rest, {\n    ref: ref,\n    className: merge(className, rootPrefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"picker-list-item\"])))),\n    tabIndex: -1,\n    onKeyDown: disabled ? null : onKeyDown,\n    onClick: handleClick\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes\n  }, renderItem ? renderItem(value) : children));\n});\nListItem.displayName = 'ListItem';\nexport default ListItem;","map":null,"metadata":{},"sourceType":"module"}