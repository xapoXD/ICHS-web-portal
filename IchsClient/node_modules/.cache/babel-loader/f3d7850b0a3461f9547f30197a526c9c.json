{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"tagProps\", \"trigger\", \"onTagRemove\", \"renderMenuItemCheckbox\"];\nimport React, { useMemo } from 'react';\nimport InputPicker from \"../InputPicker/InputPicker.js\";\nimport { TagProvider } from \"../InputPicker/InputPickerContext.js\";\n/**\n * `TagPicker` component enables multi-selection by tags and supports new options.\n *\n * @see https://rsuitejs.com/components/tag-picker/\n */\nvar TagPicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$tagProps = props.tagProps,\n    tagProps = _props$tagProps === void 0 ? {} : _props$tagProps,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? 'Enter' : _props$trigger,\n    onTagRemove = props.onTagRemove,\n    renderMenuItemCheckbox = props.renderMenuItemCheckbox,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var contextValue = useMemo(function () {\n    return {\n      multi: true,\n      trigger: trigger,\n      tagProps: tagProps,\n      onTagRemove: onTagRemove,\n      renderCheckbox: renderMenuItemCheckbox\n    };\n  }, [onTagRemove, renderMenuItemCheckbox, tagProps, trigger]);\n  return /*#__PURE__*/React.createElement(TagProvider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(InputPicker, _extends({}, rest, {\n    ref: ref\n  })));\n});\nTagPicker.displayName = 'TagPicker';\nexport default TagPicker;","map":null,"metadata":{},"sourceType":"module"}