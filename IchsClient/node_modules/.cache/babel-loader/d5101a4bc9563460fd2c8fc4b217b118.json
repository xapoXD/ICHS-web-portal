{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _templateObject, _templateObject2;\nvar _excluded = [\"as\", \"classPrefix\", \"className\", \"show\", \"children\", \"placement\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport kebabCase from 'lodash/kebabCase';\nimport { useClassNames } from \"../internals/hooks/index.js\";\nimport { placementPolyfill } from \"../internals/utils/index.js\";\nimport { oneOf } from \"../internals/propTypes/index.js\";\n/**\n * The `<Form.ErrorMessage>` component is used to display error messages in the form.\n * @see https://rsuitejs.com/components/form/\n */\nvar FormErrorMessage = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _prefix;\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'form-error-message' : _props$classPrefix,\n    className = props.className,\n    show = props.show,\n    children = props.children,\n    placement = props.placement,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    prefix = _useClassNames.prefix,\n    merge = _useClassNames.merge;\n  var classes = withClassPrefix('show');\n  var wrapperClasses = merge(className, prefix('wrapper', (_prefix = {}, _prefix[\"placement-\" + kebabCase(placementPolyfill(placement))] = placement, _prefix)));\n  return show ? /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: wrapperClasses\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"arrow\"])))\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"inner\"])))\n  }, children))) : null;\n});\nFormErrorMessage.displayName = 'FormErrorMessage';\nFormErrorMessage.propTypes = {\n  show: PropTypes.bool,\n  classPrefix: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  placement: oneOf(['bottomStart', 'bottomEnd', 'topStart', 'topEnd', 'leftStart', 'rightStart', 'leftEnd', 'rightEnd'])\n};\nexport default FormErrorMessage;","map":null,"metadata":{},"sourceType":"module"}