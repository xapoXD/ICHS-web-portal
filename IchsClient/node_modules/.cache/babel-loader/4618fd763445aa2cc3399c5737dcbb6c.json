{"ast":null,"code":"var _jsxFileName = \"/Users/jankarasek/PROJEKT_ICHS/IchsClient/src/components/custom/TableComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './TableView.css'; // Ensure this CSS file exists and is correctly linked.\n\nconst TableView = ({\n  data\n}) => {\n  // Ensure the data is in the correct format\n  if (!data || !Array.isArray(data.StepwiseFilteredData) || data.StepwiseFilteredData.length < 3) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 16\n      }\n    }, \"No data available\");\n  }\n\n  // Function to apply conditional formatting based on value comparison\n  const getCellClass = (percentage, overallPercentage) => {\n    if (percentage < overallPercentage) {\n      return 'green';\n    } else if (percentage > overallPercentage) {\n      return 'red';\n    }\n    return ''; // No special class if percentages are equal\n  };\n\n  // Mapping region codes to names (Example mapping, update as needed)\n  const regionMapping = {\n    CZ10: 'Praha',\n    CZ20: 'Středočeský kraj',\n    CZ31: 'Jihočeský kraj',\n    CZ32: 'Plzeňský kraj',\n    CZ41: 'Karlovarský kraj',\n    CZ51: 'Liberecký kraj',\n    CZ52: 'Královéhradecký kraj',\n    CZ53: 'Pardubický kraj',\n    CZ63: 'Kraj Vysočina',\n    CZ64: 'Jihomoravský kraj',\n    CZ71: 'Olomoucký kraj',\n    CZ72: 'Zlínský kraj',\n    CZ80: 'Moravskoslezský kraj',\n    CZ42: 'Ústecký kraj'\n  };\n\n  // Extracting the data for the three factors\n  const veggieData = data.StepwiseFilteredData[0];\n  const hypertenseData = data.StepwiseFilteredData[1];\n  const physicalData = data.StepwiseFilteredData[2];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"V\\xDDSLEDEK VYHLED\\xC1V\\xC1N\\xCD\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-combination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Kombinace filtr\\u016F:\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#125\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"#125\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#152\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"#152\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#215\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"#215\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#231\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"#231\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#312\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"#312\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#321\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"#321\")), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"data-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, \"Region\"), /*#__PURE__*/React.createElement(\"th\", {\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Nedostatek zeleniny a ovoce\"), /*#__PURE__*/React.createElement(\"th\", {\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Hypertenze\"), /*#__PURE__*/React.createElement(\"th\", {\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"Fyzick\\xE1 aktivita\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"Kraj\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Krajsk\\xFD pr\\u016Fm\\u011Br\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Celost\\xE1tn\\xED pr\\u016Fm\\u011Br\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"Krajsk\\xFD pr\\u016Fm\\u011Br\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"Celost\\xE1tn\\xED pr\\u016Fm\\u011Br\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Krajsk\\xFD pr\\u016Fm\\u011Br\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, \"Celost\\xE1tn\\xED pr\\u016Fm\\u011Br\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, veggieData.RegionSummary.map((regionData, index) => {\n    var _veggieData$RegionSum, _hypertenseData$Regio, _physicalData$RegionS;\n    const regionVeggie = ((_veggieData$RegionSum = veggieData.RegionSummary[index]) === null || _veggieData$RegionSum === void 0 ? void 0 : _veggieData$RegionSum.Percentage) || 0;\n    const regionHypertense = (hypertenseData === null || hypertenseData === void 0 ? void 0 : (_hypertenseData$Regio = hypertenseData.RegionSummary[index]) === null || _hypertenseData$Regio === void 0 ? void 0 : _hypertenseData$Regio.Percentage) || 0;\n    const regionPhysical = (physicalData === null || physicalData === void 0 ? void 0 : (_physicalData$RegionS = physicalData.RegionSummary[index]) === null || _physicalData$RegionS === void 0 ? void 0 : _physicalData$RegionS.Percentage) || 0;\n    const overallVeggie = veggieData.OverallPercentage || 0;\n    const overallHypertense = (hypertenseData === null || hypertenseData === void 0 ? void 0 : hypertenseData.OverallPercentage) || 0;\n    const overallPhysical = (physicalData === null || physicalData === void 0 ? void 0 : physicalData.OverallPercentage) || 0;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, regionMapping[regionData.Region] || 'Unknown'), /*#__PURE__*/React.createElement(\"td\", {\n      className: getCellClass(regionVeggie, overallVeggie),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, regionVeggie.toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, overallVeggie.toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: getCellClass(regionHypertense, overallHypertense),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, regionHypertense.toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, overallHypertense.toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: getCellClass(regionPhysical, overallPhysical),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, regionPhysical.toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }, overallPhysical.toFixed(2), \"%\"));\n  }))));\n};\n\n// Adding prop types to enforce type checking\nTableView.propTypes = {\n  data: PropTypes.shape({\n    StepwiseFilteredData: PropTypes.arrayOf(PropTypes.shape({\n      RegionSummary: PropTypes.arrayOf(PropTypes.shape({\n        Region: PropTypes.string,\n        Percentage: PropTypes.number\n      })),\n      OverallPercentage: PropTypes.number\n    }))\n  })\n};\nexport default TableView;","map":{"version":3,"names":["React","PropTypes","TableView","data","Array","isArray","StepwiseFilteredData","length","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","getCellClass","percentage","overallPercentage","regionMapping","CZ10","CZ20","CZ31","CZ32","CZ41","CZ51","CZ52","CZ53","CZ63","CZ64","CZ71","CZ72","CZ80","CZ42","veggieData","hypertenseData","physicalData","className","href","colSpan","RegionSummary","map","regionData","index","_veggieData$RegionSum","_hypertenseData$Regio","_physicalData$RegionS","regionVeggie","Percentage","regionHypertense","regionPhysical","overallVeggie","OverallPercentage","overallHypertense","overallPhysical","key","Region","toFixed","propTypes","shape","arrayOf","string","number"],"sources":["/Users/jankarasek/PROJEKT_ICHS/IchsClient/src/components/custom/TableComponent.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TableView.css'; // Ensure this CSS file exists and is correctly linked.\n\nconst TableView = ({ data }) => {\n\n    // Ensure the data is in the correct format\n    if (!data || !Array.isArray(data.StepwiseFilteredData) || data.StepwiseFilteredData.length < 3) {\n        return <div>No data available</div>;\n    }\n\n    // Function to apply conditional formatting based on value comparison\n    const getCellClass = (percentage, overallPercentage) => {\n        if (percentage < overallPercentage) {\n            return 'green';\n        } else if (percentage > overallPercentage) {\n            return 'red';\n        }\n        return ''; // No special class if percentages are equal\n    };\n\n    // Mapping region codes to names (Example mapping, update as needed)\n    const regionMapping = {\n        CZ10: 'Praha',\n        CZ20: 'Středočeský kraj',\n        CZ31: 'Jihočeský kraj',\n        CZ32: 'Plzeňský kraj',\n        CZ41: 'Karlovarský kraj',\n        CZ51: 'Liberecký kraj',\n        CZ52: 'Královéhradecký kraj',\n        CZ53: 'Pardubický kraj',\n        CZ63: 'Kraj Vysočina',\n        CZ64: 'Jihomoravský kraj',\n        CZ71: 'Olomoucký kraj',\n        CZ72: 'Zlínský kraj',\n        CZ80: 'Moravskoslezský kraj',\n        CZ42: 'Ústecký kraj'\n    };\n\n    // Extracting the data for the three factors\n    const veggieData = data.StepwiseFilteredData[0];\n    const hypertenseData = data.StepwiseFilteredData[1];\n    const physicalData = data.StepwiseFilteredData[2];\n\n    return (\n        <div className=\"table-container\">\n            <h2>VÝSLEDEK VYHLEDÁVÁNÍ</h2>\n\n            <div className=\"filter-combination\">\n                <span>Kombinace filtrů:</span>\n                <a href=\"#125\">#125</a>\n                <a href=\"#152\">#152</a>\n                <a href=\"#215\">#215</a>\n                <a href=\"#231\">#231</a>\n                <a href=\"#312\">#312</a>\n                <a href=\"#321\">#321</a>\n            </div>\n\n            <table className=\"data-table\">\n                <thead>\n                    <tr>\n                        <th>Region</th>\n                        <th colSpan=\"2\">Nedostatek zeleniny a ovoce</th>\n                        <th colSpan=\"2\">Hypertenze</th>\n                        <th colSpan=\"2\">Fyzická aktivita</th>\n                    </tr>\n                    <tr>\n                        <th>Kraj</th>\n                        <th>Krajský průměr</th>\n                        <th>Celostátní průměr</th>\n                        <th>Krajský průměr</th>\n                        <th>Celostátní průměr</th>\n                        <th>Krajský průměr</th>\n                        <th>Celostátní průměr</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {veggieData.RegionSummary.map((regionData, index) => {\n                        const regionVeggie = veggieData.RegionSummary[index]?.Percentage || 0;\n                        const regionHypertense = hypertenseData?.RegionSummary[index]?.Percentage || 0;\n                        const regionPhysical = physicalData?.RegionSummary[index]?.Percentage || 0;\n\n                        const overallVeggie = veggieData.OverallPercentage || 0;\n                        const overallHypertense = hypertenseData?.OverallPercentage || 0;\n                        const overallPhysical = physicalData?.OverallPercentage || 0;\n\n                        return (\n                            <tr key={index}>\n                                <td>{regionMapping[regionData.Region] || 'Unknown'}</td>\n                                <td className={getCellClass(regionVeggie, overallVeggie)}>{regionVeggie.toFixed(2)}%</td>\n                                <td>{overallVeggie.toFixed(2)}%</td>\n                                <td className={getCellClass(regionHypertense, overallHypertense)}>{regionHypertense.toFixed(2)}%</td>\n                                <td>{overallHypertense.toFixed(2)}%</td>\n                                <td className={getCellClass(regionPhysical, overallPhysical)}>{regionPhysical.toFixed(2)}%</td>\n                                <td>{overallPhysical.toFixed(2)}%</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\n// Adding prop types to enforce type checking\nTableView.propTypes = {\n    data: PropTypes.shape({\n        StepwiseFilteredData: PropTypes.arrayOf(PropTypes.shape({\n            RegionSummary: PropTypes.arrayOf(PropTypes.shape({\n                Region: PropTypes.string,\n                Percentage: PropTypes.number\n            })),\n            OverallPercentage: PropTypes.number\n        }))\n    })\n};\n\nexport default TableView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}