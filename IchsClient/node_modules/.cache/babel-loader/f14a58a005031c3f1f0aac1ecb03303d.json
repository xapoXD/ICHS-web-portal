{"ast":null,"code":"'use client';\n\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\nvar _excluded = [\"as\", \"className\", \"classPrefix\", \"disabled\", \"locale\", \"activePage\", \"maxButtons\", \"pages\", \"ellipsis\", \"boundaryLinks\", \"first\", \"prev\", \"next\", \"last\", \"size\", \"linkAs\", \"linkProps\", \"onSelect\"],\n  _excluded2 = [\"eventKey\", \"disabled\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport More from '@rsuite/icons/legacy/More';\nimport PagePrevious from '@rsuite/icons/legacy/PagePrevious';\nimport PageNext from '@rsuite/icons/legacy/PageNext';\nimport PageTop from '@rsuite/icons/legacy/PageTop';\nimport PageEnd from '@rsuite/icons/legacy/PageEnd';\nimport PaginationButton from \"./PaginationButton.js\";\nimport { useClassNames, useCustom } from \"../internals/hooks/index.js\";\nvar PAGINATION_ICONS = {\n  more: /*#__PURE__*/React.createElement(More, null),\n  prev: /*#__PURE__*/React.createElement(PagePrevious, null),\n  next: /*#__PURE__*/React.createElement(PageNext, null),\n  first: /*#__PURE__*/React.createElement(PageTop, null),\n  last: /*#__PURE__*/React.createElement(PageEnd, null)\n};\n/**\n * Pagination component for displaying page numbers.\n *\n * @see https://rsuitejs.com/components/pagination\n */\nvar Pagination = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    className = props.className,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'pagination' : _props$classPrefix,\n    disabledProp = props.disabled,\n    overrideLocale = props.locale,\n    _props$activePage = props.activePage,\n    activePage = _props$activePage === void 0 ? 1 : _props$activePage,\n    maxButtons = props.maxButtons,\n    _props$pages = props.pages,\n    pages = _props$pages === void 0 ? 1 : _props$pages,\n    ellipsis = props.ellipsis,\n    boundaryLinks = props.boundaryLinks,\n    first = props.first,\n    prev = props.prev,\n    next = props.next,\n    last = props.last,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 'xs' : _props$size,\n    linkAs = props.linkAs,\n    linkProps = props.linkProps,\n    onSelect = props.onSelect,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    merge = _useClassNames.merge,\n    withClassPrefix = _useClassNames.withClassPrefix,\n    prefix = _useClassNames.prefix;\n  var _useCustom = useCustom('Pagination', overrideLocale),\n    locale = _useCustom.locale;\n  var renderItem = function renderItem(key, itemProps) {\n    var eventKey = itemProps.eventKey,\n      disabled = itemProps.disabled,\n      itemRest = _objectWithoutPropertiesLoose(itemProps, _excluded2);\n    var disabledButton = disabled;\n    if (typeof disabledProp !== 'undefined') {\n      disabledButton = typeof disabledProp === 'function' ? disabledProp(eventKey) : disabledProp;\n    }\n    var title = (locale === null || locale === void 0 ? void 0 : locale[key]) || eventKey;\n    return /*#__PURE__*/React.createElement(PaginationButton, _extends({\n      \"aria-label\": title,\n      title: title\n    }, itemRest, linkProps, {\n      key: key + \"-\" + eventKey,\n      eventKey: eventKey,\n      as: linkAs,\n      disabled: disabledButton,\n      onSelect: disabledButton ? undefined : onSelect\n    }));\n  };\n  var renderFirst = function renderFirst() {\n    if (!first) {\n      return null;\n    }\n    return renderItem('first', {\n      eventKey: 1,\n      disabled: activePage === 1,\n      children: /*#__PURE__*/React.createElement(\"span\", {\n        className: prefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"symbol\"])))\n      }, first === true ? PAGINATION_ICONS.first : first)\n    });\n  };\n  var renderPrev = function renderPrev() {\n    if (!prev) {\n      return null;\n    }\n    return renderItem('prev', {\n      eventKey: activePage - 1,\n      disabled: activePage === 1,\n      children: /*#__PURE__*/React.createElement(\"span\", {\n        className: prefix(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"symbol\"])))\n      }, prev === true ? PAGINATION_ICONS.prev : prev)\n    });\n  };\n  var renderPageButtons = function renderPageButtons() {\n    var pageButtons = [];\n    var startPage;\n    var endPage;\n    var hasHiddenPagesAfter;\n    if (maxButtons) {\n      var hiddenPagesBefore = activePage - Math.floor(maxButtons / 2);\n      startPage = hiddenPagesBefore > 1 ? hiddenPagesBefore : 1;\n      hasHiddenPagesAfter = startPage + maxButtons <= pages;\n      if (!hasHiddenPagesAfter) {\n        endPage = pages;\n        startPage = pages - maxButtons + 1;\n        if (startPage < 1) {\n          startPage = 1;\n        }\n      } else {\n        endPage = startPage + maxButtons - 1;\n      }\n    } else {\n      startPage = 1;\n      endPage = pages;\n    }\n    for (var pagenumber = startPage; pagenumber <= endPage; pagenumber += 1) {\n      pageButtons.push(renderItem(pagenumber, {\n        eventKey: pagenumber,\n        active: pagenumber === activePage,\n        children: pagenumber\n      }));\n    }\n    if (boundaryLinks && ellipsis && startPage !== 1) {\n      pageButtons.unshift(renderItem('more', {\n        eventKey: 'ellipsisFirst',\n        disabled: true,\n        children: /*#__PURE__*/React.createElement(\"span\", {\n          className: prefix(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"symbol\"])))\n        }, ellipsis === true ? PAGINATION_ICONS.more : ellipsis)\n      }));\n      pageButtons.unshift(renderItem(1, {\n        eventKey: 1,\n        children: 1\n      }));\n    }\n    if (maxButtons && hasHiddenPagesAfter && ellipsis) {\n      pageButtons.push(renderItem('more', {\n        eventKey: 'ellipsis',\n        disabled: true,\n        children: /*#__PURE__*/React.createElement(\"span\", {\n          className: prefix(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"symbol\"])))\n        }, ellipsis === true ? PAGINATION_ICONS.more : ellipsis)\n      }));\n      if (boundaryLinks && endPage !== pages) {\n        pageButtons.push(renderItem(pages, {\n          eventKey: pages,\n          disabled: false,\n          children: pages\n        }));\n      }\n    }\n    return pageButtons;\n  };\n  var renderNext = function renderNext() {\n    if (!next) {\n      return null;\n    }\n    return renderItem('next', {\n      eventKey: activePage + 1,\n      disabled: activePage >= pages,\n      children: /*#__PURE__*/React.createElement(\"span\", {\n        className: prefix(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"symbol\"])))\n      }, next === true ? PAGINATION_ICONS.next : next)\n    });\n  };\n  var renderLast = function renderLast() {\n    if (!last) {\n      return null;\n    }\n    return renderItem('last', {\n      eventKey: pages,\n      disabled: activePage >= pages,\n      children: /*#__PURE__*/React.createElement(\"span\", {\n        className: prefix(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"symbol\"])))\n      }, last === true ? PAGINATION_ICONS.last : last)\n    });\n  };\n  var classes = merge(className, withClassPrefix(size));\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }), renderFirst(), renderPrev(), renderPageButtons(), renderNext(), renderLast());\n});\nPagination.displayName = 'Pagination';\nPagination.propTypes = {\n  onSelect: PropTypes.func,\n  activePage: PropTypes.number,\n  pages: PropTypes.number,\n  maxButtons: PropTypes.number,\n  boundaryLinks: PropTypes.bool,\n  ellipsis: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  first: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  last: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  prev: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  next: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  linkAs: PropTypes.elementType,\n  linkProps: PropTypes.object,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  locale: PropTypes.any,\n  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.func])\n};\nexport default Pagination;","map":null,"metadata":{},"sourceType":"module"}