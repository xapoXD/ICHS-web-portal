{"ast":null,"code":"var _jsxFileName = \"/Users/jankarasek/PROJEKT_ICHS/IchsClient/src/components/custom/TableComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './TableView.css'; // Ensure this CSS file exists and is correctly linked.\n\nconst TableView = ({\n  data\n}) => {\n  // Ensure the data is in the correct format\n  if (!data || !Array.isArray(data.StepwiseFilteredData) || data.StepwiseFilteredData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 16\n      }\n    }, \"No data available\");\n  }\n\n  // Function to apply conditional formatting based on value comparison\n  const getCellClass = (percentage, overallPercentage) => {\n    if (percentage < overallPercentage) {\n      return 'green';\n    } else if (percentage > overallPercentage) {\n      return 'red';\n    }\n    return ''; // No special class if percentages are equal\n  };\n\n  // Mapping region codes to names (Example mapping, update as needed)\n  const regionMapping = {\n    CZ10: 'Praha',\n    CZ20: 'Středočeský kraj',\n    CZ31: 'Jihočeský kraj',\n    CZ32: 'Plzeňský kraj',\n    CZ41: 'Karlovarský kraj',\n    CZ51: 'Liberecký kraj',\n    CZ52: 'Královéhradecký kraj',\n    CZ53: 'Pardubický kraj',\n    CZ63: 'Kraj Vysočina',\n    CZ64: 'Jihomoravský kraj',\n    CZ71: 'Olomoucký kraj',\n    CZ72: 'Zlínský kraj',\n    CZ80: 'Moravskoslezský kraj',\n    CZ42: 'Ústecký kraj'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"V\\xDDSLEDEK VYHLED\\xC1V\\xC1N\\xCD\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-combination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Kombinace filtr\\u016F:\"), data.StepwiseFilteredData.map((filterData, index) => /*#__PURE__*/React.createElement(\"a\", {\n    key: index,\n    href: `#filter${index + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"#\", index + 1))), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"data-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"Region\"), data.StepwiseFilteredData.map((filterData, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, filterData.AppliedFilter)))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Kraj\"), data.StepwiseFilteredData.map((filterData, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, \"Krajsk\\xFD pr\\u016Fm\\u011Br\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }, \"Celost\\xE1tn\\xED pr\\u016Fm\\u011Br\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, data.StepwiseFilteredData[0].RegionSummary.map((regionData, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, regionMapping[regionData.Region] || 'Unknown'), data.StepwiseFilteredData.map((filterData, filterIndex) => {\n    var _filterData$RegionSum;\n    const regionPercentage = ((_filterData$RegionSum = filterData.RegionSummary[index]) === null || _filterData$RegionSum === void 0 ? void 0 : _filterData$RegionSum.Percentage) || 0;\n    const overallPercentage = filterData.OverallPercentage || 0;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: filterIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: getCellClass(regionPercentage, overallPercentage),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 41\n      }\n    }, regionPercentage.toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 41\n      }\n    }, overallPercentage.toFixed(2), \"%\"));\n  }))))));\n};\n\n// Adding prop types to enforce type checking\nTableView.propTypes = {\n  data: PropTypes.shape({\n    StepwiseFilteredData: PropTypes.arrayOf(PropTypes.shape({\n      AppliedFilter: PropTypes.string.isRequired,\n      RegionSummary: PropTypes.arrayOf(PropTypes.shape({\n        Region: PropTypes.string.isRequired,\n        Percentage: PropTypes.number.isRequired\n      })).isRequired,\n      OverallPercentage: PropTypes.number.isRequired\n    })).isRequired\n  }).isRequired\n};\nexport default TableView;","map":{"version":3,"names":["React","PropTypes","TableView","data","Array","isArray","StepwiseFilteredData","length","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","getCellClass","percentage","overallPercentage","regionMapping","CZ10","CZ20","CZ31","CZ32","CZ41","CZ51","CZ52","CZ53","CZ63","CZ64","CZ71","CZ72","CZ80","CZ42","className","map","filterData","index","key","href","Fragment","colSpan","AppliedFilter","RegionSummary","regionData","Region","filterIndex","_filterData$RegionSum","regionPercentage","Percentage","OverallPercentage","toFixed","propTypes","shape","arrayOf","string","isRequired","number"],"sources":["/Users/jankarasek/PROJEKT_ICHS/IchsClient/src/components/custom/TableComponent.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TableView.css'; // Ensure this CSS file exists and is correctly linked.\n\nconst TableView = ({ data }) => {\n    // Ensure the data is in the correct format\n    if (!data || !Array.isArray(data.StepwiseFilteredData) || data.StepwiseFilteredData.length === 0) {\n        return <div>No data available</div>;\n    }\n\n    // Function to apply conditional formatting based on value comparison\n    const getCellClass = (percentage, overallPercentage) => {\n        if (percentage < overallPercentage) {\n            return 'green';\n        } else if (percentage > overallPercentage) {\n            return 'red';\n        }\n        return ''; // No special class if percentages are equal\n    };\n\n    // Mapping region codes to names (Example mapping, update as needed)\n    const regionMapping = {\n        CZ10: 'Praha',\n        CZ20: 'Středočeský kraj',\n        CZ31: 'Jihočeský kraj',\n        CZ32: 'Plzeňský kraj',\n        CZ41: 'Karlovarský kraj',\n        CZ51: 'Liberecký kraj',\n        CZ52: 'Královéhradecký kraj',\n        CZ53: 'Pardubický kraj',\n        CZ63: 'Kraj Vysočina',\n        CZ64: 'Jihomoravský kraj',\n        CZ71: 'Olomoucký kraj',\n        CZ72: 'Zlínský kraj',\n        CZ80: 'Moravskoslezský kraj',\n        CZ42: 'Ústecký kraj'\n    };\n\n    return (\n        <div className=\"table-container\">\n            <h2>VÝSLEDEK VYHLEDÁVÁNÍ</h2>\n\n            <div className=\"filter-combination\">\n                <span>Kombinace filtrů:</span>\n                {data.StepwiseFilteredData.map((filterData, index) => (\n                    <a key={index} href={`#filter${index + 1}`}>#{index + 1}</a>\n                ))}\n            </div>\n\n            <table className=\"data-table\">\n                <thead>\n                    <tr>\n                        <th>Region</th>\n                        {data.StepwiseFilteredData.map((filterData, index) => (\n                            <React.Fragment key={index}>\n                                <th colSpan=\"2\">{filterData.AppliedFilter}</th>\n                            </React.Fragment>\n                        ))}\n                    </tr>\n                    <tr>\n                        <th>Kraj</th>\n                        {data.StepwiseFilteredData.map((filterData, index) => (\n                            <React.Fragment key={index}>\n                                <th>Krajský průměr</th>\n                                <th>Celostátní průměr</th>\n                            </React.Fragment>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.StepwiseFilteredData[0].RegionSummary.map((regionData, index) => (\n                        <tr key={index}>\n                            <td>{regionMapping[regionData.Region] || 'Unknown'}</td>\n                            {data.StepwiseFilteredData.map((filterData, filterIndex) => {\n                                const regionPercentage = filterData.RegionSummary[index]?.Percentage || 0;\n                                const overallPercentage = filterData.OverallPercentage || 0;\n                                return (\n                                    <React.Fragment key={filterIndex}>\n                                        <td className={getCellClass(regionPercentage, overallPercentage)}>\n                                            {regionPercentage.toFixed(2)}%\n                                        </td>\n                                        <td>\n                                            {overallPercentage.toFixed(2)}%\n                                        </td>\n                                    </React.Fragment>\n                                );\n                            })}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\n// Adding prop types to enforce type checking\nTableView.propTypes = {\n    data: PropTypes.shape({\n        StepwiseFilteredData: PropTypes.arrayOf(PropTypes.shape({\n            AppliedFilter: PropTypes.string.isRequired,\n            RegionSummary: PropTypes.arrayOf(PropTypes.shape({\n                Region: PropTypes.string.isRequired,\n                Percentage: PropTypes.number.isRequired\n            })).isRequired,\n            OverallPercentage: PropTypes.number.isRequired\n        })).isRequired\n    }).isRequired\n};\n\nexport default TableView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}