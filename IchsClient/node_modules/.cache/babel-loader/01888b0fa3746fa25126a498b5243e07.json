{"ast":null,"code":"'use client';\n\n/**\n * Composes multiple functions into a single function.\n *\n * @example\n * ```\n * const a = () => console.log('a');\n * const b = () => console.log('b');\n * const c = () => console.log('c');\n *\n * const d = composeFunctions(a, b, c);\n *\n * d(); // a b c\n * ```\n */\nexport function composeFunctions() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n  return function (first) {\n    return fns.reduce(function (previousValue, fn) {\n      return fn(previousValue);\n    }, first);\n  };\n}\nexport default composeFunctions;","map":null,"metadata":{},"sourceType":"module"}