{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { useContext, useReducer } from 'react';\nimport NavDropdown from \"./NavDropdown.js\";\nimport NavDropdownMenu from \"./NavDropdownMenu.js\";\nimport { SidenavContext } from \"../Sidenav/Sidenav.js\";\nimport SidenavDropdown from \"../Sidenav/SidenavDropdown.js\";\nimport { NavbarContext } from \"../Navbar/index.js\";\nimport NavbarDropdown from \"../Navbar/NavbarDropdown.js\";\nimport NavbarDropdownMenu from \"../Navbar/NavbarDropdownMenu.js\";\nimport SidenavDropdownMenu from \"../Sidenav/SidenavDropdownMenu.js\";\nexport var NavMenuContext = /*#__PURE__*/React.createContext(null);\nNavMenuContext.displayName = 'NavMenu.Context';\nexport var NavMenuActionType = /*#__PURE__*/function (NavMenuActionType) {\n  NavMenuActionType[NavMenuActionType[\"RegisterItem\"] = 0] = \"RegisterItem\";\n  NavMenuActionType[NavMenuActionType[\"UnregisterItem\"] = 1] = \"UnregisterItem\";\n  return NavMenuActionType;\n}({});\nvar initilNavMenuState = {\n  items: []\n};\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case NavMenuActionType.RegisterItem:\n      return _extends({}, state, {\n        items: [].concat(state.items.filter(function (item) {\n          return item._id !== action.payload._id;\n        }), [action.payload])\n      });\n    case NavMenuActionType.UnregisterItem:\n      return _extends({}, state, {\n        items: state.items.filter(function (item) {\n          return item._id !== action.payload._id;\n        })\n      });\n    default:\n      throw new Error('Unrecognizable action type: ' + action.type);\n  }\n};\n\n/**\n * The `Nav.Menu` component is used to create navigation menus.\n *\n * - When used as direct child of `<Nav>`, render the NavDropdown\n * - When used within another `<Nav.Menu>`, render the NavDropdownMenu\n *\n * @see https://rsuitejs.com/components/nav\n */\nvar NavMenu = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var parentNavMenu = useContext(NavMenuContext);\n  var navMenuContext = useReducer(reducer, initilNavMenuState);\n  var navbar = useContext(NavbarContext);\n  var sidenav = useContext(SidenavContext);\n  if (!parentNavMenu) {\n    if (navbar) {\n      return /*#__PURE__*/React.createElement(NavMenuContext.Provider, {\n        value: navMenuContext\n      }, /*#__PURE__*/React.createElement(NavbarDropdown, _extends({\n        ref: ref\n      }, props)));\n    }\n    if (sidenav) {\n      return /*#__PURE__*/React.createElement(NavMenuContext.Provider, {\n        value: navMenuContext\n      }, /*#__PURE__*/React.createElement(SidenavDropdown, _extends({\n        ref: ref\n      }, props)));\n    }\n    return /*#__PURE__*/React.createElement(NavMenuContext.Provider, {\n      value: navMenuContext\n    }, /*#__PURE__*/React.createElement(NavDropdown, _extends({\n      ref: ref\n    }, props)));\n  }\n  if (navbar) {\n    return /*#__PURE__*/React.createElement(NavbarDropdownMenu, _extends({\n      ref: ref\n    }, props));\n  }\n  if (sidenav) {\n    return /*#__PURE__*/React.createElement(SidenavDropdownMenu, _extends({\n      ref: ref\n    }, props));\n  }\n  return /*#__PURE__*/React.createElement(NavDropdownMenu, _extends({\n    ref: ref\n  }, props));\n});\nNavMenu.displayName = 'Nav.Menu';\nexport default NavMenu;","map":null,"metadata":{},"sourceType":"module"}