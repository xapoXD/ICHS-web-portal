{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"as\", \"classPrefix\", \"className\", \"align\", \"endless\", \"isItemActive\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport some from 'lodash/some';\nimport TimelineItem from \"./TimelineItem.js\";\nimport { useClassNames } from \"../internals/hooks/index.js\";\nimport { ReactChildren } from \"../internals/utils/index.js\";\nimport { oneOf } from \"../internals/propTypes/index.js\";\n/**\n * The `Timeline` component is used to display a list of items in chronological order.\n *\n * @see https://rsuitejs.com/components/timeline\n */\nvar Timeline = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n    _props$as = props.as,\n    Component = _props$as === void 0 ? 'ul' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'timeline' : _props$classPrefix,\n    className = props.className,\n    _props$align = props.align,\n    align = _props$align === void 0 ? 'left' : _props$align,\n    endless = props.endless,\n    _props$isItemActive = props.isItemActive,\n    isItemActive = _props$isItemActive === void 0 ? Timeline.ACTIVE_LAST : _props$isItemActive,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    merge = _useClassNames.merge,\n    withClassPrefix = _useClassNames.withClassPrefix;\n  var count = ReactChildren.count(children);\n  var withTime = some(React.Children.toArray(children), function (item) {\n    var _item$props;\n    return item === null || item === void 0 ? void 0 : (_item$props = item.props) === null || _item$props === void 0 ? void 0 : _item$props.time;\n  });\n  var classes = merge(className, withClassPrefix(\"align-\" + align, {\n    endless: endless,\n    'with-time': withTime\n  }));\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }), ReactChildren.mapCloneElement(children, function (_child, index) {\n    return {\n      last: index + 1 === count,\n      INTERNAL_active: isItemActive(index, count),\n      align: align\n    };\n  }));\n});\nTimeline.ACTIVE_FIRST = function (index) {\n  return index === 0;\n};\nTimeline.ACTIVE_LAST = function (index, totalItemsCount) {\n  return index === totalItemsCount - 1;\n};\nTimeline.Item = TimelineItem;\nTimeline.displayName = 'Timeline';\nTimeline.propTypes = {\n  as: PropTypes.elementType,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.node,\n  align: oneOf(['left', 'right', 'alternate']),\n  endless: PropTypes.bool\n};\nexport default Timeline;","map":null,"metadata":{},"sourceType":"module"}