{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"disabled\", \"limitOptions\", \"locale\", \"limit\", \"onChangeLimit\", \"size\", \"prefix\"];\nimport React, { useRef } from 'react';\nimport SelectPicker from \"../SelectPicker/index.js\";\nimport { tplTransform } from \"../internals/utils/index.js\";\nvar LimitPicker = function LimitPicker(props) {\n  var disabled = props.disabled,\n    limitOptions = props.limitOptions,\n    locale = props.locale,\n    limit = props.limit,\n    onChangeLimit = props.onChangeLimit,\n    size = props.size,\n    prefix = props.prefix,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var containerRef = useRef(null);\n  var disabledPicker = typeof disabled === 'function' ? disabled('picker') : Boolean(disabled);\n  var formatlimitOptions = limitOptions.map(function (item) {\n    return {\n      value: item,\n      label: locale.limit && tplTransform(locale.limit, item)\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('limit'),\n    ref: containerRef\n  }, /*#__PURE__*/React.createElement(SelectPicker, _extends({}, rest, {\n    size: size,\n    cleanable: false,\n    searchable: false,\n    placement: \"topStart\",\n    data: formatlimitOptions,\n    value: limit,\n    onChange: onChangeLimit,\n    menuStyle: {\n      minWidth: 'auto'\n    },\n    disabled: disabledPicker,\n    container: function container() {\n      return containerRef.current;\n    }\n  })));\n};\nexport default LimitPicker;","map":null,"metadata":{},"sourceType":"module"}