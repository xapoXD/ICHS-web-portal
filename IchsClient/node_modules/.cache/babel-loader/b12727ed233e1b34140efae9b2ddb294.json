{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"classPrefix\", \"className\", \"searchKeyword\", \"labelKey\", \"valueKey\", \"parentMap\", \"data\", \"focusItemValue\", \"disabledItemValues\", \"inputRef\", \"renderSearchItem\", \"onSearch\", \"onSelect\"];\nimport React from 'react';\nimport { useClassNames, useCustom } from \"../internals/hooks/index.js\";\nimport { getPathTowardsItem } from \"../internals/Tree/utils/index.js\";\nimport SearchBox from \"../internals/SearchBox/index.js\";\nimport Highlight from \"../Highlight/index.js\";\nfunction SearchView(props) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'cascade-search-view' : _props$classPrefix,\n    className = props.className,\n    searchKeyword = props.searchKeyword,\n    labelKey = props.labelKey,\n    valueKey = props.valueKey,\n    parentMap = props.parentMap,\n    data = props.data,\n    focusItemValue = props.focusItemValue,\n    disabledItemValues = props.disabledItemValues,\n    inputRef = props.inputRef,\n    renderSearchItem = props.renderSearchItem,\n    onSearch = props.onSearch,\n    onSelect = props.onSelect,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    merge = _useClassNames.merge,\n    prefix = _useClassNames.prefix,\n    withClassPrefix = _useClassNames.withClassPrefix,\n    rootPrefix = _useClassNames.rootPrefix;\n  var classes = merge(className, withClassPrefix());\n  var _useCustom = useCustom('Picker'),\n    locale = _useCustom.locale;\n  var renderSearchRow = function renderSearchRow(item, key) {\n    var items = getPathTowardsItem(item, function (item) {\n      return parentMap.get(item);\n    });\n    var formattedNodes = items.map(function (itemData) {\n      var _extends2;\n      var label = /*#__PURE__*/React.createElement(Highlight, {\n        as: \"span\",\n        query: searchKeyword\n      }, itemData[labelKey]);\n      return _extends({}, itemData, (_extends2 = {}, _extends2[labelKey] = label, _extends2));\n    });\n    var disabled = disabledItemValues.some(function (value) {\n      return formattedNodes.some(function (itemData) {\n        return itemData[valueKey] === value;\n      });\n    });\n    var itemClasses = prefix('row', {\n      'row-disabled': disabled,\n      'row-focus': item[valueKey] === focusItemValue\n    });\n    var label = formattedNodes.map(function (itemData, index) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: \"col-\" + index,\n        className: prefix('col')\n      }, itemData[labelKey]);\n    });\n    var handleCheck = function handleCheck(event) {\n      if (!disabled) {\n        onSelect(item, items, event);\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      role: \"treeitem\",\n      \"aria-disabled\": disabled,\n      \"aria-label\": item[labelKey],\n      key: key,\n      \"data-key\": item[valueKey],\n      className: itemClasses,\n      tabIndex: -1,\n      onClick: handleCheck\n    }, renderSearchItem ? renderSearchItem(label, items) : label);\n  };\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: classes\n  }, rest), /*#__PURE__*/React.createElement(SearchBox, {\n    placeholder: locale === null || locale === void 0 ? void 0 : locale.searchPlaceholder,\n    onChange: onSearch,\n    value: searchKeyword,\n    inputRef: inputRef\n  }), searchKeyword !== '' && /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('panel'),\n    \"data-layer\": 0,\n    role: \"tree\"\n  }, data.length ? data.map(renderSearchRow) : /*#__PURE__*/React.createElement(\"div\", {\n    className: merge(prefix('none'), rootPrefix('picker-none'))\n  }, locale.noResultsText)));\n}\nexport default SearchView;","map":null,"metadata":{},"sourceType":"module"}