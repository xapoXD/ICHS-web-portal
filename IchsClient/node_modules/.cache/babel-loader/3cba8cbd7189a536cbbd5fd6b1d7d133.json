{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"content\", \"color\", \"className\", \"classPrefix\", \"children\", \"maxCount\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from \"../internals/hooks/index.js\";\nimport { oneOf } from \"../internals/propTypes/index.js\";\n/**\n * The Badge component is usually used to mark or highlight the status or quantity of an object.\n * @see https://rsuitejs.com/components/badge\n */\nvar Badge = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    contentText = props.content,\n    color = props.color,\n    className = props.className,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'badge' : _props$classPrefix,\n    children = props.children,\n    _props$maxCount = props.maxCount,\n    maxCount = _props$maxCount === void 0 ? 99 : _props$maxCount,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    prefix = _useClassNames.prefix,\n    merge = _useClassNames.merge;\n  var dot = contentText === undefined || contentText === null;\n  var classes = merge(className, withClassPrefix(color, {\n    independent: !children,\n    wrapper: children,\n    dot: dot\n  }));\n  if (contentText === false) {\n    return /*#__PURE__*/React.cloneElement(children, {\n      ref: ref\n    });\n  }\n  var content = typeof contentText === 'number' && contentText > maxCount ? maxCount + \"+\" : contentText;\n  if (!children) {\n    return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n      ref: ref,\n      className: classes\n    }), content);\n  }\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes\n  }), children, /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('content')\n  }, content));\n});\nBadge.displayName = 'Badge';\nBadge.propTypes = {\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.node,\n  as: PropTypes.elementType,\n  content: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n  maxCount: PropTypes.number,\n  color: oneOf(['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet'])\n};\nexport default Badge;","map":null,"metadata":{},"sourceType":"module"}