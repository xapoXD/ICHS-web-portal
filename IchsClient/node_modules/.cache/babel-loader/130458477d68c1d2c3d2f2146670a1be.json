{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"classPrefix\", \"className\", \"as\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from \"../internals/hooks/index.js\";\n/**\n * The `<Dropdown.Separator>` API\n *\n * Renders a non-focusable and non-interactive `separator`\n * Per ARIA APG https://www.w3.org/WAI/ARIA/apg/patterns/menu/\n */\nvar DropdownSeparator = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'dropdown-item-divider' : _props$classPrefix,\n    className = props.className,\n    _props$as = props.as,\n    Component = _props$as === void 0 ? 'li' : _props$as,\n    restProps = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    merge = _useClassNames.merge,\n    withClassPrefix = _useClassNames.withClassPrefix;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    role: \"separator\",\n    className: merge(withClassPrefix(), className)\n  }, restProps));\n});\nDropdownSeparator.displayName = 'Dropdown.Separator';\nDropdownSeparator.propTypes = {\n  as: PropTypes.elementType\n};\nexport default DropdownSeparator;","map":null,"metadata":{},"sourceType":"module"}