{"ast":null,"code":"var _jsxFileName = \"/Users/jankarasek/PROJEKT_ICHS/IchsClient/src/components/custom/MapComponent.js\";\nimport React, { useState, useEffect } from 'react';\n//import './Map.css'; // Import your CSS file for styling\nimport { ReactComponent as CzechRepublicMap } from \"@svgr/webpack?-svgo,+ref!./cz.svg\";\nconst regionData = {\n  \"region-1\": {\n    value: 77,\n    average: 56\n  },\n  // Example data\n  \"region-2\": {\n    value: 40,\n    average: 56\n  }\n  // Add more regions as needed\n};\n\nconst getColor = (value, average) => {\n  return value > average ? 'green' : 'red';\n};\nconst mapcontainer = {\n  width: 100,\n  maxwidth: '600px',\n  margin: 500\n};\nconst czechmap = {\n  width: 100,\n  height: 500\n};\nconst MapPage = () => {\n  const [regionColors, setRegionColors] = useState({});\n  useEffect(() => {\n    const updatedColors = {};\n    Object.keys(regionData).forEach(regionId => {\n      const {\n        value,\n        average\n      } = regionData[regionId];\n      updatedColors[regionId] = getColor(value, average);\n    });\n    setRegionColors(updatedColors);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mapcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CzechRepublicMap, {\n    className: \"czechmap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"style\", {\n    jsx: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, `\n        .czech-map #region-1 {\n          fill: ${regionColors[\"region-1\"] || 'gray'};\n        }\n        .czech-map #region-2 {\n          fill: ${regionColors[\"region-2\"] || 'gray'};\n        }\n        /* Add more regions as needed */\n      `));\n};\nexport default MapPage;","map":{"version":3,"names":["React","useState","useEffect","ReactComponent","CzechRepublicMap","regionData","value","average","getColor","mapcontainer","width","maxwidth","margin","czechmap","height","MapPage","regionColors","setRegionColors","updatedColors","Object","keys","forEach","regionId","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","jsx"],"sources":["/Users/jankarasek/PROJEKT_ICHS/IchsClient/src/components/custom/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n//import './Map.css'; // Import your CSS file for styling\nimport { ReactComponent as CzechRepublicMap } from './cz.svg';\n\nconst regionData = {\n    \"region-1\": { value: 77, average: 56 }, // Example data\n    \"region-2\": { value: 40, average: 56 },\n    // Add more regions as needed\n};\n\nconst getColor = (value, average) => {\n    return value > average ? 'green' : 'red';\n};\n\n\nconst mapcontainer = {\n    width: 100,\n    maxwidth: '600px',\n    margin: 500\n};\n\nconst czechmap = {\n    width: 100,\n    height: 500\n};\n\n\n  \n\nconst MapPage = () => {\n    const [regionColors, setRegionColors] = useState({});\n\n    useEffect(() => {\n        const updatedColors = {};\n        Object.keys(regionData).forEach((regionId) => {\n            const { value, average } = regionData[regionId];\n            updatedColors[regionId] = getColor(value, average);\n        });\n        setRegionColors(updatedColors);\n    }, []);\n\n\n    return (\n        <div>\n            <div className=\"mapcontainer\">\n                <CzechRepublicMap className=\"czechmap\" />\n            </div>\n            <style jsx>{`\n        .czech-map #region-1 {\n          fill: ${regionColors[\"region-1\"] || 'gray'};\n        }\n        .czech-map #region-2 {\n          fill: ${regionColors[\"region-2\"] || 'gray'};\n        }\n        /* Add more regions as needed */\n      `}</style>\n        </div>\n    );\n};\n\nexport default MapPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AAAA,SAAAC,cAAA,IAAAC,gBAAA;AAGA,MAAMC,UAAU,GAAG;EACf,UAAU,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC;EAAE;EACxC,UAAU,EAAE;IAAED,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG;EACrC;AACJ,CAAC;;AAED,MAAMC,QAAQ,GAAGA,CAACF,KAAK,EAAEC,OAAO,KAAK;EACjC,OAAOD,KAAK,GAAGC,OAAO,GAAG,OAAO,GAAG,KAAK;AAC5C,CAAC;AAGD,MAAME,YAAY,GAAG;EACjBC,KAAK,EAAE,GAAG;EACVC,QAAQ,EAAE,OAAO;EACjBC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,QAAQ,GAAG;EACbH,KAAK,EAAE,GAAG;EACVI,MAAM,EAAE;AACZ,CAAC;AAKD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAClB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMgB,aAAa,GAAG,CAAC,CAAC;IACxBC,MAAM,CAACC,IAAI,CAACf,UAAU,CAAC,CAACgB,OAAO,CAAEC,QAAQ,IAAK;MAC1C,MAAM;QAAEhB,KAAK;QAAEC;MAAQ,CAAC,GAAGF,UAAU,CAACiB,QAAQ,CAAC;MAC/CJ,aAAa,CAACI,QAAQ,CAAC,GAAGd,QAAQ,CAACF,KAAK,EAAEC,OAAO,CAAC;IACtD,CAAC,CAAC;IACFU,eAAe,CAACC,aAAa,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIlB,KAAA,CAAAuB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI7B,KAAA,CAAAuB,aAAA;IAAKO,SAAS,EAAC,cAAc;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB7B,KAAA,CAAAuB,aAAA,CAACnB,gBAAgB;IAAC0B,SAAS,EAAC,UAAU;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACvC,CAAC,eACN7B,KAAA,CAAAuB,aAAA;IAAOQ,GAAG;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG;AACzB;AACA,kBAAkBb,YAAY,CAAC,UAAU,CAAC,IAAI,MAAO;AACrD;AACA;AACA,kBAAkBA,YAAY,CAAC,UAAU,CAAC,IAAI,MAAO;AACrD;AACA;AACA,OAAe,CACF,CAAC;AAEd,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}