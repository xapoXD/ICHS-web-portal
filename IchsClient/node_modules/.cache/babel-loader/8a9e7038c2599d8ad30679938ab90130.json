{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"classPrefix\", \"htmlFor\", \"className\", \"id\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from \"../internals/hooks/index.js\";\nimport { useFormGroup } from \"../FormGroup/index.js\";\n/**\n * The `<Form.ControlLabel>` component renders a label with required indicator, for form controls.\n * @see https://rsuitejs.com/components/form/\n */\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useFormGroup = useFormGroup(),\n    labelId = _useFormGroup.labelId,\n    controlId = _useFormGroup.controlId;\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'label' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'form-control-label' : _props$classPrefix,\n    _props$htmlFor = props.htmlFor,\n    htmlFor = _props$htmlFor === void 0 ? controlId : _props$htmlFor,\n    className = props.className,\n    _props$id = props.id,\n    id = _props$id === void 0 ? labelId : _props$id,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge;\n  var classes = merge(className, withClassPrefix());\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    id: id,\n    htmlFor: htmlFor\n  }, rest, {\n    ref: ref,\n    className: classes\n  }));\n});\nFormControlLabel.displayName = 'FormControlLabel';\nFormControlLabel.propTypes = {\n  className: PropTypes.string,\n  htmlFor: PropTypes.string,\n  classPrefix: PropTypes.string\n};\nexport default FormControlLabel;","map":null,"metadata":{},"sourceType":"module"}