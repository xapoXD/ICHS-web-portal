{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"classPrefix\", \"className\", \"bordered\", \"hover\", \"size\", \"sortable\", \"autoScroll\", \"pressDelay\", \"transitionDuration\", \"children\", \"onSort\", \"onSortEnd\", \"onSortMove\", \"onSortStart\"];\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\nimport useSortHelper from \"./helper/useSortHelper.js\";\nimport { useClassNames } from \"../internals/hooks/index.js\";\nimport { mergeRefs } from \"../internals/utils/index.js\";\nimport ListContext from \"./ListContext.js\";\nimport ListItem from \"./ListItem.js\";\nimport { oneOf } from \"../internals/propTypes/index.js\";\n/**\n * The `List` component is used to specify the layout of the list.\n * @see https://rsuitejs.com/components/list\n */\nvar List = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'list' : _props$classPrefix,\n    className = props.className,\n    bordered = props.bordered,\n    hover = props.hover,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 'md' : _props$size,\n    sortable = props.sortable,\n    _props$autoScroll = props.autoScroll,\n    autoScroll = _props$autoScroll === void 0 ? true : _props$autoScroll,\n    _props$pressDelay = props.pressDelay,\n    pressDelay = _props$pressDelay === void 0 ? 0 : _props$pressDelay,\n    _props$transitionDura = props.transitionDuration,\n    transitionDuration = _props$transitionDura === void 0 ? 300 : _props$transitionDura,\n    children = props.children,\n    onSort = props.onSort,\n    onSortEnd = props.onSortEnd,\n    onSortMove = props.onSortMove,\n    onSortStart = props.onSortStart,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge;\n  var _useSortHelper = useSortHelper({\n      autoScroll: autoScroll,\n      onSort: onSort,\n      onSortEnd: onSortEnd,\n      onSortMove: onSortMove,\n      onSortStart: onSortStart,\n      pressDelay: pressDelay,\n      transitionDuration: transitionDuration\n    }),\n    containerRef = _useSortHelper.containerRef,\n    register = _useSortHelper.register,\n    sorting = _useSortHelper.sorting,\n    handleEnd = _useSortHelper.handleEnd,\n    handleStart = _useSortHelper.handleStart;\n  var classes = merge(className, withClassPrefix({\n    bordered: bordered,\n    sortable: sortable,\n    sorting: sorting,\n    hover: hover\n  }));\n  var contextValue = useMemo(function () {\n    return {\n      bordered: bordered,\n      size: size,\n      register: register\n    };\n  }, [bordered, register, size]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"list\"\n  }, rest, {\n    ref: mergeRefs(containerRef, ref),\n    className: classes,\n    onMouseDown: sortable ? handleStart : undefined,\n    onMouseUp: sortable ? handleEnd : undefined\n  }), /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: contextValue\n  }, children));\n});\nList.Item = ListItem;\nList.displayName = 'List';\nList.propTypes = {\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  bordered: PropTypes.bool,\n  hover: PropTypes.bool,\n  sortable: PropTypes.bool,\n  size: oneOf(['lg', 'md', 'sm']),\n  autoScroll: PropTypes.bool,\n  pressDelay: PropTypes.number,\n  transitionDuration: PropTypes.number,\n  onSortStart: PropTypes.func,\n  onSortMove: PropTypes.func,\n  onSortEnd: PropTypes.func,\n  onSort: PropTypes.func\n};\nexport default List;","map":null,"metadata":{},"sourceType":"module"}